{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\shilan\\\\Desktop\\\\chartTest\\\\reactcharts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\shilan\\\\Desktop\\\\chartTest\\\\reactcharts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\shilan\\\\Desktop\\\\chartTest\\\\reactcharts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\shilan\\\\Desktop\\\\chartTest\\\\reactcharts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\shilan\\\\Desktop\\\\chartTest\\\\reactcharts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\shilan\\\\Desktop\\\\chartTest\\\\reactcharts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\shilan\\\\Desktop\\\\chartTest\\\\reactcharts\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Chart from './components/Chart';\nimport VolumeSlider from './components/RangeSlider';\nimport CSVReader from 'react-csv-reader';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.updateRange = _this.updateRange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      sliderValue: 5,\n      chartData: {},\n      chartData1: {}\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.getChartData();\n    }\n  }, {\n    key: \"updateRange\",\n    value: function updateRange(val) {\n      var chartData = this.state.chartData;\n      var chartData1 = this.state.chartData1;\n      console.log(chartData1);\n      console.log(chartData.datasets[0].data[0]);\n      chartData.datasets = [{\n        label: 'Population',\n        data: [val * chartData1.datasets[0].data[0], val * chartData1.datasets[0].data[1], val * chartData1.datasets[0].data[2], val * chartData1.datasets[0].data[3], val * chartData1.datasets[0].data[4], val * chartData1.datasets[0].data[5]],\n        backgroundColor: ['red']\n      }];\n      this.setState({\n        sliderValue: val,\n        chartData: chartData\n      });\n    }\n  }, {\n    key: \"getChartData\",\n    value: function getChartData() {\n      // Ajax calls here\n      var chartData = this.state.chartData;\n      var tempChart = this.state.chartData1;\n      var labels = ['1 year', '2 year', '3 year', '4 year', '5 year'];\n      var datasets = [{\n        label: 'Population',\n        data: [0, 20, 40, 50, 70],\n        backgroundColor: ['#223371']\n      }, {\n        label: 'Population',\n        data: [10, 40, 60, 70, 90],\n        backgroundColor: ['#447DB9']\n      }, {\n        label: 'Population',\n        data: [30, 50, 90, 100, 190],\n        backgroundColor: ['#65BFC7']\n      }];\n      chartData.labels = labels;\n      chartData.datasets = datasets;\n      tempChart.labels = labels;\n      tempChart.datasets = datasets;\n      this.setState({\n        chartData: {\n          chartData: chartData\n        },\n        chartData1: {\n          tempChart: tempChart\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var stylePadding = {\n        width: 600\n      };\n      return React.createElement(\"div\", {\n        className: \"App\",\n        style: stylePadding,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Welcome to React\"), React.createElement(Chart, {\n        chartData: this.state.chartData,\n        location: \"Massachusetts\",\n        legendPosition: \"bottom\",\n        redraw: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(VolumeSlider, {\n        range: this.state.sliderValue,\n        action: this.updateRange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\shilan\\Desktop\\chartTest\\reactcharts\\src\\App.js"],"names":["React","Component","Chart","VolumeSlider","CSVReader","App","props","updateRange","bind","state","sliderValue","chartData","chartData1","getChartData","val","console","log","datasets","data","label","backgroundColor","setState","tempChart","labels","stylePadding","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Chart from './components/Chart';\nimport VolumeSlider from './components/RangeSlider';\nimport CSVReader from 'react-csv-reader';\n\nclass App extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.updateRange= this.updateRange.bind(this);\n\t\tthis.state = {\n\t\t\tsliderValue:5,\n\t\t\tchartData:{},\n\t\t\tchartData1:{}\n\t\t}\n\t}\n\t\tcomponentWillMount(){\n    this.getChartData();\n}\n\tupdateRange(val) {\n\t\tconst chartData = this.state.chartData;\n\t\tconst chartData1=this.state.chartData1;\n\t\tconsole.log(chartData1);\n\t\tconsole.log(chartData.datasets[0].data[0]);\n\t\tchartData.datasets = [\n\t\t\t  {\n\t\t\t\tlabel:'Population',\n\t\t\t\tdata:[\n\t\t\t\t  val*chartData1.datasets[0].data[0],\n\t\t\t\t  (val)*chartData1.datasets[0].data[1],\n\t\t\t\t  (val)*chartData1.datasets[0].data[2],\n\t\t\t\t  (val)*chartData1.datasets[0].data[3],\n\t\t\t\t  (val)*chartData1.datasets[0].data[4],\n\t\t\t\t  (val)*chartData1.datasets[0].data[5]\n\t\t\t\t],\n\t\t\t\tbackgroundColor:[\n\t\t\t\t  'red'\n\t\t\t\t]\n\t\t\t  }\n\t\t\t]\n\t\tthis.setState({\n\t\t  sliderValue: val,\n\t\t  chartData: chartData\n\t\t});\n    }\n\t\n\tgetChartData(){\n    // Ajax calls here\n\t\tconst chartData = this.state.chartData;\n\t\tconst tempChart=this.state.chartData1;\n\t\tvar labels = ['1 year','2 year','3 year','4 year','5 year'];\n\t\tvar datasets = [\n\t\t\t  {\n\t\t\t\tlabel:'Population',\n\t\t\t\tdata:[\n\t\t\t\t  0,20,40,50,70\n\t\t\t\t],\n\t\t\t\tbackgroundColor:[\n\t\t\t\t  '#223371'\n\t\t\t\t]\n\t\t\t  },\n\t\t\t  {\n\t\t\t\tlabel:'Population',\n\t\t\t\tdata:[\n\t\t\t\t  10,40,60,70,90\n\t\t\t\t],\n\t\t\t\tbackgroundColor:[\n\t\t\t\t  '#447DB9'\n\t\t\t\t]\n\t\t\t  },\n\t\t\t  {\n\t\t\t\tlabel:'Population',\n\t\t\t\tdata:[\n\t\t\t\t  30,50,90,100,190\n\t\t\t\t],\n\t\t\t\tbackgroundColor:[\n\t\t\t\t  '#65BFC7'\n\t\t\t\t]\n\t\t\t  }\n\t\t\t]\n\t\tchartData.labels=labels;\n\t\tchartData.datasets=datasets;\n\t\ttempChart.labels=labels;\n\t\ttempChart.datasets=datasets;\n\t\tthis.setState({\n\t\t  chartData:{chartData},\n\t\t  chartData1:{tempChart}\n\t\t});\n\t}\n  render() {\n\t  \n\t  var stylePadding={\n\t\t  width: 600\n\t  }\n    return (\n      <div className=\"App\" style={stylePadding}>\n        <div className=\"\">\n            <h2>Welcome to React</h2>\n            <Chart chartData={this.state.chartData} location=\"Massachusetts\" legendPosition=\"bottom\" redraw/>\n\t\t    <VolumeSlider range={this.state.sliderValue} action={this.updateRange}/>\n\t\t</div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}