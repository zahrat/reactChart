{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\shilan\\\\Desktop\\\\chartTest\\\\reactcharts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\shilan\\\\Desktop\\\\chartTest\\\\reactcharts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\shilan\\\\Desktop\\\\chartTest\\\\reactcharts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\shilan\\\\Desktop\\\\chartTest\\\\reactcharts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\shilan\\\\Desktop\\\\chartTest\\\\reactcharts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\shilan\\\\Desktop\\\\chartTest\\\\reactcharts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\shilan\\\\Desktop\\\\chartTest\\\\reactcharts\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Chart from './components/Chart';\nimport VolumeSlider from './components/RangeSlider';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.updateRange = _this.updateRange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      sliderValue: 5,\n      chartData: {}\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.getChartData();\n    }\n  }, {\n    key: \"updateRange\",\n    value: function updateRange(val) {\n      this.setState({\n        sliderValue: val\n      });\n      this.getChartData(); //console.log();\n    }\n  }, {\n    key: \"getChartData\",\n    value: function getChartData() {\n      // Ajax calls here\n      console.log(this.state.chartData.datasets.slice[0]);\n      this.setState({\n        chartData: {\n          labels: ['Boston', 'Worcester', 'Springfield', 'Lowell', 'Cambridge', 'New Bedford'],\n          datasets: [{\n            label: 'Population',\n            data: [this.state.sliderValue, this.state.sliderValue * 2, this.state.sliderValue * 3, this.state.sliderValue * 3, this.state.sliderValue * 4, this.state.sliderValue * 5],\n            backgroundColor: ['red']\n          }]\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Welcome to React\"), React.createElement(Chart, {\n        chartData: this.state.chartData,\n        location: \"Massachusetts\",\n        legendPosition: \"bottom\",\n        redraw: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(VolumeSlider, {\n        range: this.state.sliderValue,\n        action: this.updateRange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\shilan\\Desktop\\chartTest\\reactcharts\\src\\App.js"],"names":["React","Component","Chart","VolumeSlider","App","props","updateRange","bind","state","sliderValue","chartData","getChartData","val","setState","console","log","datasets","slice","labels","label","data","backgroundColor"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;;IAEMC,G;;;;;AACL,eAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;AACA,UAAKC,WAAL,GAAkB,MAAKA,WAAL,CAAiBC,IAAjB,uDAAlB;AACA,UAAKC,KAAL,GAAa;AACZC,MAAAA,WAAW,EAAC,CADA;AAEZC,MAAAA,SAAS,EAAC;AAFE,KAAb;AAHiB;AAOjB;;;;yCACoB;AAClB,WAAKC,YAAL;AACH;;;gCACYC,G,EAAK;AAChB,WAAKC,QAAL,CAAc;AACZJ,QAAAA,WAAW,EAAEG;AADD,OAAd;AAGA,WAAKD,YAAL,GAJgB,CAKhB;AACG;;;mCAEU;AACX;AACFG,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWE,SAAX,CAAqBM,QAArB,CAA8BC,KAA9B,CAAoC,CAApC,CAAZ;AACA,WAAKJ,QAAL,CAAc;AACZH,QAAAA,SAAS,EAAC;AACXQ,UAAAA,MAAM,EAAE,CAAC,QAAD,EAAW,WAAX,EAAwB,aAAxB,EAAuC,QAAvC,EAAiD,WAAjD,EAA8D,aAA9D,CADG;AAEXF,UAAAA,QAAQ,EAAC,CACP;AACDG,YAAAA,KAAK,EAAC,YADL;AAEDC,YAAAA,IAAI,EAAC,CACH,KAAKZ,KAAL,CAAWC,WADR,EAEF,KAAKD,KAAL,CAAWC,WAAZ,GAAyB,CAFtB,EAGF,KAAKD,KAAL,CAAWC,WAAZ,GAAyB,CAHtB,EAIF,KAAKD,KAAL,CAAWC,WAAZ,GAAyB,CAJtB,EAKF,KAAKD,KAAL,CAAWC,WAAZ,GAAyB,CALtB,EAMF,KAAKD,KAAL,CAAWC,WAAZ,GAAyB,CANtB,CAFJ;AAUDY,YAAAA,eAAe,EAAC,CACd,KADc;AAVf,WADO;AAFE;AADE,OAAd;AAqBA;;;6BACS;AACP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADH,EAEE,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAE,KAAKb,KAAL,CAAWE,SAA7B;AAAwC,QAAA,QAAQ,EAAC,eAAjD;AAAiE,QAAA,cAAc,EAAC,QAAhF;AAAyF,QAAA,MAAM,MAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGJ,oBAAC,YAAD;AAAc,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,WAAhC;AAA6C,QAAA,MAAM,EAAE,KAAKH,WAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHI,CADF,CADF;AASD;;;;EAvDeL,S;;AA0DlB,eAAeG,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Chart from './components/Chart';\nimport VolumeSlider from './components/RangeSlider';\n\nclass App extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.updateRange= this.updateRange.bind(this);\n\t\tthis.state = {\n\t\t\tsliderValue:5,\n\t\t\tchartData:{}\n\t\t}\n\t}\n\t\tcomponentWillMount(){\n    this.getChartData();\n}\n\tupdateRange(val) {\n\t\tthis.setState({\n\t\t  sliderValue: val\n\t\t});\n\t\tthis.getChartData();\n\t\t//console.log();\n    }\n\n\tgetChartData(){\n    // Ajax calls here\n\t\tconsole.log(this.state.chartData.datasets.slice[0]);\n\t\tthis.setState({\n\t\t  chartData:{\n\t\t\tlabels: ['Boston', 'Worcester', 'Springfield', 'Lowell', 'Cambridge', 'New Bedford'],\n\t\t\tdatasets:[\n\t\t\t  {\n\t\t\t\tlabel:'Population',\n\t\t\t\tdata:[\n\t\t\t\t  this.state.sliderValue,\n\t\t\t\t  (this.state.sliderValue)*2,\n\t\t\t\t  (this.state.sliderValue)*3,\n\t\t\t\t  (this.state.sliderValue)*3,\n\t\t\t\t  (this.state.sliderValue)*4,\n\t\t\t\t  (this.state.sliderValue)*5\n\t\t\t\t],\n\t\t\t\tbackgroundColor:[\n\t\t\t\t  'red'\n\t\t\t\t]\n\t\t\t  }\n\t\t\t]\n\t\t  }\n\t\t});\n\t}\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"\">\n           <h2>Welcome to React</h2>\n          <Chart chartData={this.state.chartData} location=\"Massachusetts\" legendPosition=\"bottom\" redraw/>\n\t\t  <VolumeSlider range={this.state.sliderValue} action={this.updateRange}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}