{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar apirequest_1 = require(\"../../lib/apirequest\");\n/**\n * Google Cloud Key Management Service (KMS) API\n *\n * Manages encryption for your cloud services the same way you do on-premises.\n * You can generate, use, rotate, and destroy AES256 encryption keys.\n *\n * @example\n * const google = require('googleapis');\n * const cloudkms = google.cloudkms('v1');\n *\n * @namespace cloudkms\n * @type {Function}\n * @version v1\n * @variation v1\n * @param {object=} options Options for Cloudkms\n */\n\n\nfunction Cloudkms(options) {\n  var self = this;\n  self._options = options || {};\n  self.projects = {\n    locations: {\n      /**\n       * cloudkms.projects.locations.get\n       * @desc Get information about a location.\n       * @alias cloudkms.projects.locations.get\n       * @memberOf! cloudkms(v1)\n       *\n       * @param {object} params Parameters for request\n       * @param {string} params.name Resource name for the location.\n       * @param {object} [options] Optionally override request options, such as `url`, `method`, and `encoding`.\n       * @param {callback} callback The callback that handles the response.\n       * @return {object} Request object\n       */\n      get: function get(params, options, callback) {\n        if (typeof options === 'function') {\n          callback = options;\n          options = {};\n        }\n\n        options = options || {};\n        var rootUrl = options.rootUrl || 'https://cloudkms.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/{name}').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: self\n        };\n        return apirequest_1.createAPIRequest(parameters, callback);\n      },\n      list: function list(params, options, callback) {\n        if (typeof options === 'function') {\n          callback = options;\n          options = {};\n        }\n\n        options = options || {};\n        var rootUrl = options.rootUrl || 'https://cloudkms.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/{name}/locations').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['name'],\n          pathParams: ['name'],\n          context: self\n        };\n        return apirequest_1.createAPIRequest(parameters, callback);\n      },\n      keyRings: {\n        /**\n         * cloudkms.projects.locations.keyRings.create\n         * @desc Create a new KeyRing in a given Project and Location.\n         * @alias cloudkms.projects.locations.keyRings.create\n         * @memberOf! cloudkms(v1)\n         *\n         * @param {object} params Parameters for request\n         * @param {string=} params.keyRingId Required. It must be unique within a location and match the regular expression `[a-zA-Z0-9_-]{1,63}`\n         * @param {string} params.parent Required. The resource name of the location associated with the KeyRings, in the format `projects/x/locations/x`.\n         * @param {cloudkms(v1).KeyRing} params.resource Request body data\n         * @param {object} [options] Optionally override request options, such as `url`, `method`, and `encoding`.\n         * @param {callback} callback The callback that handles the response.\n         * @return {object} Request object\n         */\n        create: function create(params, options, callback) {\n          if (typeof options === 'function') {\n            callback = options;\n            options = {};\n          }\n\n          options = options || {};\n          var rootUrl = options.rootUrl || 'https://cloudkms.googleapis.com/';\n          var parameters = {\n            options: Object.assign({\n              url: (rootUrl + '/v1/{parent}/keyRings').replace(/([^:]\\/)\\/+/g, '$1'),\n              method: 'POST'\n            }, options),\n            params: params,\n            requiredParams: ['parent'],\n            pathParams: ['parent'],\n            context: self\n          };\n          return apirequest_1.createAPIRequest(parameters, callback);\n        },\n        get: function get(params, options, callback) {\n          if (typeof options === 'function') {\n            callback = options;\n            options = {};\n          }\n\n          options = options || {};\n          var rootUrl = options.rootUrl || 'https://cloudkms.googleapis.com/';\n          var parameters = {\n            options: Object.assign({\n              url: (rootUrl + '/v1/{name}').replace(/([^:]\\/)\\/+/g, '$1'),\n              method: 'GET'\n            }, options),\n            params: params,\n            requiredParams: ['name'],\n            pathParams: ['name'],\n            context: self\n          };\n          return apirequest_1.createAPIRequest(parameters, callback);\n        },\n        getIamPolicy: function getIamPolicy(params, options, callback) {\n          if (typeof options === 'function') {\n            callback = options;\n            options = {};\n          }\n\n          options = options || {};\n          var rootUrl = options.rootUrl || 'https://cloudkms.googleapis.com/';\n          var parameters = {\n            options: Object.assign({\n              url: (rootUrl + '/v1/{resource}:getIamPolicy').replace(/([^:]\\/)\\/+/g, '$1'),\n              method: 'GET'\n            }, options),\n            params: params,\n            requiredParams: ['resource'],\n            pathParams: ['resource'],\n            context: self\n          };\n          return apirequest_1.createAPIRequest(parameters, callback);\n        },\n        list: function list(params, options, callback) {\n          if (typeof options === 'function') {\n            callback = options;\n            options = {};\n          }\n\n          options = options || {};\n          var rootUrl = options.rootUrl || 'https://cloudkms.googleapis.com/';\n          var parameters = {\n            options: Object.assign({\n              url: (rootUrl + '/v1/{parent}/keyRings').replace(/([^:]\\/)\\/+/g, '$1'),\n              method: 'GET'\n            }, options),\n            params: params,\n            requiredParams: ['parent'],\n            pathParams: ['parent'],\n            context: self\n          };\n          return apirequest_1.createAPIRequest(parameters, callback);\n        },\n        setIamPolicy: function setIamPolicy(params, options, callback) {\n          if (typeof options === 'function') {\n            callback = options;\n            options = {};\n          }\n\n          options = options || {};\n          var rootUrl = options.rootUrl || 'https://cloudkms.googleapis.com/';\n          var parameters = {\n            options: Object.assign({\n              url: (rootUrl + '/v1/{resource}:setIamPolicy').replace(/([^:]\\/)\\/+/g, '$1'),\n              method: 'POST'\n            }, options),\n            params: params,\n            requiredParams: ['resource'],\n            pathParams: ['resource'],\n            context: self\n          };\n          return apirequest_1.createAPIRequest(parameters, callback);\n        },\n        testIamPermissions: function testIamPermissions(params, options, callback) {\n          if (typeof options === 'function') {\n            callback = options;\n            options = {};\n          }\n\n          options = options || {};\n          var rootUrl = options.rootUrl || 'https://cloudkms.googleapis.com/';\n          var parameters = {\n            options: Object.assign({\n              url: (rootUrl + '/v1/{resource}:testIamPermissions').replace(/([^:]\\/)\\/+/g, '$1'),\n              method: 'POST'\n            }, options),\n            params: params,\n            requiredParams: ['resource'],\n            pathParams: ['resource'],\n            context: self\n          };\n          return apirequest_1.createAPIRequest(parameters, callback);\n        },\n        cryptoKeys: {\n          /**\n           * cloudkms.projects.locations.keyRings.cryptoKeys.create\n           * @desc Create a new CryptoKey within a KeyRing.\n           * CryptoKey.purpose is required.\n           * @alias\n           * cloudkms.projects.locations.keyRings.cryptoKeys.create\n           * @memberOf! cloudkms(v1)\n           *\n           * @param {object} params Parameters for request\n           * @param {string=} params.cryptoKeyId Required. It must be unique within a KeyRing and match the regular expression `[a-zA-Z0-9_-]{1,63}`\n           * @param {string} params.parent Required. The name of the KeyRing associated with the CryptoKeys.\n           * @param {cloudkms(v1).CryptoKey} params.resource Request body data\n           * @param {object} [options] Optionally override request options, such as `url`, `method`, and `encoding`.\n           * @param {callback} callback The callback that handles the response.\n           * @return {object} Request object\n           */\n          create: function create(params, options, callback) {\n            if (typeof options === 'function') {\n              callback = options;\n              options = {};\n            }\n\n            options = options || {};\n            var rootUrl = options.rootUrl || 'https://cloudkms.googleapis.com/';\n            var parameters = {\n              options: Object.assign({\n                url: (rootUrl + '/v1/{parent}/cryptoKeys').replace(/([^:]\\/)\\/+/g, '$1'),\n                method: 'POST'\n              }, options),\n              params: params,\n              requiredParams: ['parent'],\n              pathParams: ['parent'],\n              context: self\n            };\n            return apirequest_1.createAPIRequest(parameters, callback);\n          },\n          decrypt: function decrypt(params, options, callback) {\n            if (typeof options === 'function') {\n              callback = options;\n              options = {};\n            }\n\n            options = options || {};\n            var rootUrl = options.rootUrl || 'https://cloudkms.googleapis.com/';\n            var parameters = {\n              options: Object.assign({\n                url: (rootUrl + '/v1/{name}:decrypt').replace(/([^:]\\/)\\/+/g, '$1'),\n                method: 'POST'\n              }, options),\n              params: params,\n              requiredParams: ['name'],\n              pathParams: ['name'],\n              context: self\n            };\n            return apirequest_1.createAPIRequest(parameters, callback);\n          },\n          encrypt: function encrypt(params, options, callback) {\n            if (typeof options === 'function') {\n              callback = options;\n              options = {};\n            }\n\n            options = options || {};\n            var rootUrl = options.rootUrl || 'https://cloudkms.googleapis.com/';\n            var parameters = {\n              options: Object.assign({\n                url: (rootUrl + '/v1/{name}:encrypt').replace(/([^:]\\/)\\/+/g, '$1'),\n                method: 'POST'\n              }, options),\n              params: params,\n              requiredParams: ['name'],\n              pathParams: ['name'],\n              context: self\n            };\n            return apirequest_1.createAPIRequest(parameters, callback);\n          },\n          get: function get(params, options, callback) {\n            if (typeof options === 'function') {\n              callback = options;\n              options = {};\n            }\n\n            options = options || {};\n            var rootUrl = options.rootUrl || 'https://cloudkms.googleapis.com/';\n            var parameters = {\n              options: Object.assign({\n                url: (rootUrl + '/v1/{name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                method: 'GET'\n              }, options),\n              params: params,\n              requiredParams: ['name'],\n              pathParams: ['name'],\n              context: self\n            };\n            return apirequest_1.createAPIRequest(parameters, callback);\n          },\n          getIamPolicy: function getIamPolicy(params, options, callback) {\n            if (typeof options === 'function') {\n              callback = options;\n              options = {};\n            }\n\n            options = options || {};\n            var rootUrl = options.rootUrl || 'https://cloudkms.googleapis.com/';\n            var parameters = {\n              options: Object.assign({\n                url: (rootUrl + '/v1/{resource}:getIamPolicy').replace(/([^:]\\/)\\/+/g, '$1'),\n                method: 'GET'\n              }, options),\n              params: params,\n              requiredParams: ['resource'],\n              pathParams: ['resource'],\n              context: self\n            };\n            return apirequest_1.createAPIRequest(parameters, callback);\n          },\n          list: function list(params, options, callback) {\n            if (typeof options === 'function') {\n              callback = options;\n              options = {};\n            }\n\n            options = options || {};\n            var rootUrl = options.rootUrl || 'https://cloudkms.googleapis.com/';\n            var parameters = {\n              options: Object.assign({\n                url: (rootUrl + '/v1/{parent}/cryptoKeys').replace(/([^:]\\/)\\/+/g, '$1'),\n                method: 'GET'\n              }, options),\n              params: params,\n              requiredParams: ['parent'],\n              pathParams: ['parent'],\n              context: self\n            };\n            return apirequest_1.createAPIRequest(parameters, callback);\n          },\n          patch: function patch(params, options, callback) {\n            if (typeof options === 'function') {\n              callback = options;\n              options = {};\n            }\n\n            options = options || {};\n            var rootUrl = options.rootUrl || 'https://cloudkms.googleapis.com/';\n            var parameters = {\n              options: Object.assign({\n                url: (rootUrl + '/v1/{name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                method: 'PATCH'\n              }, options),\n              params: params,\n              requiredParams: ['name'],\n              pathParams: ['name'],\n              context: self\n            };\n            return apirequest_1.createAPIRequest(parameters, callback);\n          },\n          setIamPolicy: function setIamPolicy(params, options, callback) {\n            if (typeof options === 'function') {\n              callback = options;\n              options = {};\n            }\n\n            options = options || {};\n            var rootUrl = options.rootUrl || 'https://cloudkms.googleapis.com/';\n            var parameters = {\n              options: Object.assign({\n                url: (rootUrl + '/v1/{resource}:setIamPolicy').replace(/([^:]\\/)\\/+/g, '$1'),\n                method: 'POST'\n              }, options),\n              params: params,\n              requiredParams: ['resource'],\n              pathParams: ['resource'],\n              context: self\n            };\n            return apirequest_1.createAPIRequest(parameters, callback);\n          },\n          testIamPermissions: function testIamPermissions(params, options, callback) {\n            if (typeof options === 'function') {\n              callback = options;\n              options = {};\n            }\n\n            options = options || {};\n            var rootUrl = options.rootUrl || 'https://cloudkms.googleapis.com/';\n            var parameters = {\n              options: Object.assign({\n                url: (rootUrl + '/v1/{resource}:testIamPermissions').replace(/([^:]\\/)\\/+/g, '$1'),\n                method: 'POST'\n              }, options),\n              params: params,\n              requiredParams: ['resource'],\n              pathParams: ['resource'],\n              context: self\n            };\n            return apirequest_1.createAPIRequest(parameters, callback);\n          },\n          updatePrimaryVersion: function updatePrimaryVersion(params, options, callback) {\n            if (typeof options === 'function') {\n              callback = options;\n              options = {};\n            }\n\n            options = options || {};\n            var rootUrl = options.rootUrl || 'https://cloudkms.googleapis.com/';\n            var parameters = {\n              options: Object.assign({\n                url: (rootUrl + '/v1/{name}:updatePrimaryVersion').replace(/([^:]\\/)\\/+/g, '$1'),\n                method: 'POST'\n              }, options),\n              params: params,\n              requiredParams: ['name'],\n              pathParams: ['name'],\n              context: self\n            };\n            return apirequest_1.createAPIRequest(parameters, callback);\n          },\n          cryptoKeyVersions: {\n            /**\n             * cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.create\n             * @desc Create a new CryptoKeyVersion in a CryptoKey.\n             * The server will assign the next sequential id. If\n             * unset, state will be set to ENABLED.\n             * @alias\n             * cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.create\n             * @memberOf! cloudkms(v1)\n             *\n             * @param {object} params Parameters for request\n             * @param {string} params.parent Required. The name of the CryptoKey associated with the CryptoKeyVersions.\n             * @param {cloudkms(v1).CryptoKeyVersion} params.resource Request body data\n             * @param {object} [options] Optionally override request options, such as `url`, `method`, and `encoding`.\n             * @param {callback} callback The callback that handles the response.\n             * @return {object} Request object\n             */\n            create: function create(params, options, callback) {\n              if (typeof options === 'function') {\n                callback = options;\n                options = {};\n              }\n\n              options = options || {};\n              var rootUrl = options.rootUrl || 'https://cloudkms.googleapis.com/';\n              var parameters = {\n                options: Object.assign({\n                  url: (rootUrl + '/v1/{parent}/cryptoKeyVersions').replace(/([^:]\\/)\\/+/g, '$1'),\n                  method: 'POST'\n                }, options),\n                params: params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: self\n              };\n              return apirequest_1.createAPIRequest(parameters, callback);\n            },\n            destroy: function destroy(params, options, callback) {\n              if (typeof options === 'function') {\n                callback = options;\n                options = {};\n              }\n\n              options = options || {};\n              var rootUrl = options.rootUrl || 'https://cloudkms.googleapis.com/';\n              var parameters = {\n                options: Object.assign({\n                  url: (rootUrl + '/v1/{name}:destroy').replace(/([^:]\\/)\\/+/g, '$1'),\n                  method: 'POST'\n                }, options),\n                params: params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: self\n              };\n              return apirequest_1.createAPIRequest(parameters, callback);\n            },\n            get: function get(params, options, callback) {\n              if (typeof options === 'function') {\n                callback = options;\n                options = {};\n              }\n\n              options = options || {};\n              var rootUrl = options.rootUrl || 'https://cloudkms.googleapis.com/';\n              var parameters = {\n                options: Object.assign({\n                  url: (rootUrl + '/v1/{name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                  method: 'GET'\n                }, options),\n                params: params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: self\n              };\n              return apirequest_1.createAPIRequest(parameters, callback);\n            },\n            list: function list(params, options, callback) {\n              if (typeof options === 'function') {\n                callback = options;\n                options = {};\n              }\n\n              options = options || {};\n              var rootUrl = options.rootUrl || 'https://cloudkms.googleapis.com/';\n              var parameters = {\n                options: Object.assign({\n                  url: (rootUrl + '/v1/{parent}/cryptoKeyVersions').replace(/([^:]\\/)\\/+/g, '$1'),\n                  method: 'GET'\n                }, options),\n                params: params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: self\n              };\n              return apirequest_1.createAPIRequest(parameters, callback);\n            },\n            patch: function patch(params, options, callback) {\n              if (typeof options === 'function') {\n                callback = options;\n                options = {};\n              }\n\n              options = options || {};\n              var rootUrl = options.rootUrl || 'https://cloudkms.googleapis.com/';\n              var parameters = {\n                options: Object.assign({\n                  url: (rootUrl + '/v1/{name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                  method: 'PATCH'\n                }, options),\n                params: params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: self\n              };\n              return apirequest_1.createAPIRequest(parameters, callback);\n            },\n            restore: function restore(params, options, callback) {\n              if (typeof options === 'function') {\n                callback = options;\n                options = {};\n              }\n\n              options = options || {};\n              var rootUrl = options.rootUrl || 'https://cloudkms.googleapis.com/';\n              var parameters = {\n                options: Object.assign({\n                  url: (rootUrl + '/v1/{name}:restore').replace(/([^:]\\/)\\/+/g, '$1'),\n                  method: 'POST'\n                }, options),\n                params: params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: self\n              };\n              return apirequest_1.createAPIRequest(parameters, callback);\n            }\n          }\n        }\n      }\n    }\n  };\n}\n\nmodule.exports = Cloudkms;","map":null,"metadata":{},"sourceType":"script"}