{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [0, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar axios_1 = require(\"axios\");\n\nvar fs = require(\"fs\");\n\nvar jws = require(\"jws\");\n\nvar mime = require(\"mime\");\n\nvar pify = require(\"pify\");\n\nvar querystring = require(\"querystring\");\n\nvar readFile = pify(fs.readFile);\nvar GOOGLE_TOKEN_URL = 'https://www.googleapis.com/oauth2/v4/token';\nvar GOOGLE_REVOKE_TOKEN_URL = 'https://accounts.google.com/o/oauth2/revoke?token=';\n\nvar ErrorWithCode =\n/** @class */\nfunction (_super) {\n  __extends(ErrorWithCode, _super);\n\n  function ErrorWithCode(message, code) {\n    var _this = _super.call(this, message) || this;\n\n    _this.code = code;\n    return _this;\n  }\n\n  return ErrorWithCode;\n}(Error);\n\nvar getPem;\n\nvar GoogleToken =\n/** @class */\nfunction () {\n  /**\n   * Create a GoogleToken.\n   *\n   * @param options  Configuration object.\n   */\n  function GoogleToken(options) {\n    this.token = null;\n    this.expiresAt = null;\n    this.rawToken = null;\n    this.tokenExpires = null;\n    this.configure(options);\n  }\n  /**\n   * Returns whether the token has expired.\n   *\n   * @return true if the token has expired, false otherwise.\n   */\n\n\n  GoogleToken.prototype.hasExpired = function () {\n    var now = new Date().getTime();\n\n    if (this.token && this.expiresAt) {\n      return now >= this.expiresAt;\n    } else {\n      return true;\n    }\n  };\n\n  GoogleToken.prototype.getToken = function (callback) {\n    if (callback) {\n      this.getTokenAsync().then(function (t) {\n        callback(null, t);\n      }).catch(callback);\n      return;\n    }\n\n    return this.getTokenAsync();\n  };\n  /**\n   * Given a keyFile, extract the key and client email if available\n   * @param keyFile Path to a json, pem, or p12 file that contains the key.\n   * @returns an object with privateKey and clientEmail properties\n   */\n\n\n  GoogleToken.prototype.getCredentials = function (keyFile) {\n    return __awaiter(this, void 0, void 0, function () {\n      var mimeType, _a, key, body, privateKey, clientEmail, privateKey, privateKey;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            mimeType = mime.getType(keyFile);\n            _a = mimeType;\n\n            switch (_a) {\n              case 'application/json':\n                return [3\n                /*break*/\n                , 1];\n\n              case 'application/x-x509-ca-cert':\n                return [3\n                /*break*/\n                , 3];\n\n              case 'application/x-pkcs12':\n                return [3\n                /*break*/\n                , 5];\n            }\n\n            return [3\n            /*break*/\n            , 9];\n\n          case 1:\n            return [4\n            /*yield*/\n            , readFile(keyFile, 'utf8')];\n\n          case 2:\n            key = _b.sent();\n            body = JSON.parse(key);\n            privateKey = body.private_key;\n            clientEmail = body.client_email;\n\n            if (!privateKey || !clientEmail) {\n              throw new ErrorWithCode('private_key and client_email are required.', 'MISSING_CREDENTIALS');\n            }\n\n            return [2\n            /*return*/\n            , {\n              privateKey: privateKey,\n              clientEmail: clientEmail\n            }];\n\n          case 3:\n            return [4\n            /*yield*/\n            , readFile(keyFile, 'utf8')];\n\n          case 4:\n            privateKey = _b.sent();\n            return [2\n            /*return*/\n            , {\n              privateKey: privateKey\n            }];\n\n          case 5:\n            if (!!getPem) return [3\n            /*break*/\n            , 7];\n            return [4\n            /*yield*/\n            , Promise.resolve().then(function () {\n              return require('google-p12-pem');\n            })];\n\n          case 6:\n            getPem = _b.sent().getPem;\n            _b.label = 7;\n\n          case 7:\n            return [4\n            /*yield*/\n            , getPem(keyFile)];\n\n          case 8:\n            privateKey = _b.sent();\n            return [2\n            /*return*/\n            , {\n              privateKey: privateKey\n            }];\n\n          case 9:\n            throw new ErrorWithCode('Unknown certificate type. Type is determined based on file extension. ' + 'Current supported extensions are *.json, *.pem, and *.p12.', 'UNKNOWN_CERTIFICATE_TYPE');\n        }\n      });\n    });\n  };\n\n  GoogleToken.prototype.getTokenAsync = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var creds;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!this.hasExpired()) {\n              return [2\n              /*return*/\n              , Promise.resolve(this.token)];\n            }\n\n            if (!this.key && !this.keyFile) {\n              throw new Error('No key or keyFile set.');\n            }\n\n            if (!(!this.key && this.keyFile)) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , this.getCredentials(this.keyFile)];\n\n          case 1:\n            creds = _a.sent();\n            this.key = creds.privateKey;\n            this.iss = creds.clientEmail || this.iss;\n\n            if (!creds.clientEmail) {\n              this.ensureEmail();\n            }\n\n            _a.label = 2;\n\n          case 2:\n            return [2\n            /*return*/\n            , this.requestToken()];\n        }\n      });\n    });\n  };\n\n  GoogleToken.prototype.ensureEmail = function () {\n    if (!this.iss) {\n      throw new ErrorWithCode('email is required.', 'MISSING_CREDENTIALS');\n    }\n  };\n\n  GoogleToken.prototype.revokeToken = function (callback) {\n    if (callback) {\n      this.revokeTokenAsync().then(function () {\n        return callback();\n      }).catch(callback);\n      return;\n    }\n\n    return this.revokeTokenAsync();\n  };\n\n  GoogleToken.prototype.revokeTokenAsync = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        if (!this.token) {\n          throw new Error('No token to revoke.');\n        }\n\n        return [2\n        /*return*/\n        , axios_1.default.get(GOOGLE_REVOKE_TOKEN_URL + this.token).then(function (r) {\n          _this.configure({\n            email: _this.iss,\n            sub: _this.sub,\n            key: _this.key,\n            keyFile: _this.keyFile,\n            scope: _this.scope,\n            additionalClaims: _this.additionalClaims\n          });\n        })];\n      });\n    });\n  };\n  /**\n   * Configure the GoogleToken for re-use.\n   * @param  {object} options Configuration object.\n   */\n\n\n  GoogleToken.prototype.configure = function (options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    this.keyFile = options.keyFile;\n    this.key = options.key;\n    this.token = this.expiresAt = this.rawToken = null;\n    this.iss = options.email || options.iss;\n    this.sub = options.sub;\n    this.additionalClaims = options.additionalClaims;\n\n    if (typeof options.scope === 'object') {\n      this.scope = options.scope.join(' ');\n    } else {\n      this.scope = options.scope;\n    }\n  };\n  /**\n   * Request the token from Google.\n   */\n\n\n  GoogleToken.prototype.requestToken = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n\n      var iat, additionalClaims, payload, signedJWT;\n      return __generator(this, function (_a) {\n        iat = Math.floor(new Date().getTime() / 1000);\n        additionalClaims = this.additionalClaims || {};\n        payload = Object.assign({\n          iss: this.iss,\n          scope: this.scope,\n          aud: GOOGLE_TOKEN_URL,\n          exp: iat + 3600,\n          iat: iat,\n          sub: this.sub\n        }, additionalClaims);\n        signedJWT = jws.sign({\n          header: {\n            alg: 'RS256'\n          },\n          payload: payload,\n          secret: this.key\n        });\n        return [2\n        /*return*/\n        , axios_1.default.post(GOOGLE_TOKEN_URL, querystring.stringify({\n          grant_type: 'urn:ietf:params:oauth:grant-type:jwt-bearer',\n          assertion: signedJWT\n        }), {\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n          }\n        }).then(function (r) {\n          _this.rawToken = r.data;\n          _this.token = r.data.access_token;\n          _this.expiresAt = r.data.expires_in === null || r.data.expires_in === undefined ? null : (iat + r.data.expires_in) * 1000;\n          return _this.token;\n        }).catch(function (e) {\n          _this.token = null;\n          _this.tokenExpires = null;\n          var body = e.response && e.response.data ? e.response.data : {};\n          var err = e;\n\n          if (body.error) {\n            var desc = body.error_description ? \": \" + body.error_description : '';\n            err = new Error(\"\" + body.error + desc);\n          }\n\n          throw err;\n        })];\n      });\n    });\n  };\n\n  return GoogleToken;\n}();\n\nexports.GoogleToken = GoogleToken;","map":null,"metadata":{},"sourceType":"script"}