{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar apirequest_1 = require(\"../../lib/apirequest\");\n/**\n * Google Search Console URL Testing Tools API\n *\n * Provides tools for running validation tests against single URLs\n *\n * @example\n * const google = require('googleapis');\n * const searchconsole = google.searchconsole('v1');\n *\n * @namespace searchconsole\n * @type {Function}\n * @version v1\n * @variation v1\n * @param {object=} options Options for Searchconsole\n */\n\n\nfunction Searchconsole(options) {\n  var self = this;\n  self._options = options || {};\n  self.urlTestingTools = {\n    mobileFriendlyTest: {\n      /**\n       * searchconsole.urlTestingTools.mobileFriendlyTest.run\n       * @desc Runs Mobile-Friendly Test for a given URL.\n       * @alias searchconsole.urlTestingTools.mobileFriendlyTest.run\n       * @memberOf! searchconsole(v1)\n       *\n       * @param {object} params Parameters for request\n       * @param {searchconsole(v1).RunMobileFriendlyTestRequest} params.resource Request body data\n       * @param {object} [options] Optionally override request options, such as `url`, `method`, and `encoding`.\n       * @param {callback} callback The callback that handles the response.\n       * @return {object} Request object\n       */\n      run: function run(params, options, callback) {\n        if (typeof options === 'function') {\n          callback = options;\n          options = {};\n        }\n\n        options = options || {};\n        var rootUrl = options.rootUrl || 'https://searchconsole.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1/urlTestingTools/mobileFriendlyTest:run').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          requiredParams: [],\n          pathParams: [],\n          context: self\n        };\n        return apirequest_1.createAPIRequest(parameters, callback);\n      }\n    }\n  };\n}\n\nmodule.exports = Searchconsole;","map":null,"metadata":{},"sourceType":"script"}