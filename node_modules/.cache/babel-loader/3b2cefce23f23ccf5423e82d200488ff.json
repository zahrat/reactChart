{"ast":null,"code":"\"use strict\"; // Copyright 2012-2016, Google, Inc.\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*! THIS FILE IS AUTO-GENERATED */\n\nvar path = require(\"path\");\n\nvar util = require(\"util\");\n\nvar APIS = {\n  abusiveexperiencereport: {\n    'v1': require('./abusiveexperiencereport/v1')\n  },\n  acceleratedmobilepageurl: {\n    'v1': require('./acceleratedmobilepageurl/v1')\n  },\n  adexchangebuyer: {\n    'v1.2': require('./adexchangebuyer/v1.2'),\n    'v1.3': require('./adexchangebuyer/v1.3'),\n    'v1.4': require('./adexchangebuyer/v1.4')\n  },\n  adexchangebuyer2: {\n    'v2beta1': require('./adexchangebuyer2/v2beta1')\n  },\n  adexchangeseller: {\n    'v1.1': require('./adexchangeseller/v1.1'),\n    'v1': require('./adexchangeseller/v1'),\n    'v2.0': require('./adexchangeseller/v2.0')\n  },\n  adexperiencereport: {\n    'v1': require('./adexperiencereport/v1')\n  },\n  admin: {\n    'datatransfer_v1': require('./admin/datatransfer_v1'),\n    'directory_v1': require('./admin/directory_v1'),\n    'reports_v1': require('./admin/reports_v1')\n  },\n  adsense: {\n    'v1.4': require('./adsense/v1.4')\n  },\n  adsensehost: {\n    'v4.1': require('./adsensehost/v4.1')\n  },\n  analytics: {\n    'v2.4': require('./analytics/v2.4'),\n    'v3': require('./analytics/v3')\n  },\n  analyticsreporting: {\n    'v4': require('./analyticsreporting/v4')\n  },\n  androiddeviceprovisioning: {\n    'v1': require('./androiddeviceprovisioning/v1')\n  },\n  androidenterprise: {\n    'v1': require('./androidenterprise/v1')\n  },\n  androidmanagement: {\n    'v1': require('./androidmanagement/v1')\n  },\n  androidpublisher: {\n    'v1.1': require('./androidpublisher/v1.1'),\n    'v1': require('./androidpublisher/v1'),\n    'v2': require('./androidpublisher/v2')\n  },\n  appengine: {\n    'v1': require('./appengine/v1'),\n    'v1alpha': require('./appengine/v1alpha'),\n    'v1beta': require('./appengine/v1beta'),\n    'v1beta4': require('./appengine/v1beta4'),\n    'v1beta5': require('./appengine/v1beta5')\n  },\n  appsactivity: {\n    'v1': require('./appsactivity/v1')\n  },\n  appstate: {\n    'v1': require('./appstate/v1')\n  },\n  bigquery: {\n    'v2': require('./bigquery/v2')\n  },\n  bigquerydatatransfer: {\n    'v1': require('./bigquerydatatransfer/v1')\n  },\n  blogger: {\n    'v2': require('./blogger/v2'),\n    'v3': require('./blogger/v3')\n  },\n  books: {\n    'v1': require('./books/v1')\n  },\n  calendar: {\n    'v3': require('./calendar/v3')\n  },\n  chat: {\n    'v1': require('./chat/v1')\n  },\n  civicinfo: {\n    'v2': require('./civicinfo/v2')\n  },\n  classroom: {\n    'v1': require('./classroom/v1')\n  },\n  cloudbilling: {\n    'v1': require('./cloudbilling/v1')\n  },\n  cloudbuild: {\n    'v1': require('./cloudbuild/v1')\n  },\n  clouddebugger: {\n    'v2': require('./clouddebugger/v2')\n  },\n  clouderrorreporting: {\n    'v1beta1': require('./clouderrorreporting/v1beta1')\n  },\n  cloudfunctions: {\n    'v1': require('./cloudfunctions/v1'),\n    'v1beta2': require('./cloudfunctions/v1beta2')\n  },\n  cloudiot: {\n    'v1': require('./cloudiot/v1')\n  },\n  cloudkms: {\n    'v1': require('./cloudkms/v1')\n  },\n  cloudresourcemanager: {\n    'v1': require('./cloudresourcemanager/v1'),\n    'v1beta1': require('./cloudresourcemanager/v1beta1'),\n    'v2beta1': require('./cloudresourcemanager/v2beta1')\n  },\n  cloudshell: {\n    'v1': require('./cloudshell/v1'),\n    'v1alpha1': require('./cloudshell/v1alpha1')\n  },\n  cloudtasks: {\n    'v2beta2': require('./cloudtasks/v2beta2')\n  },\n  cloudtrace: {\n    'v1': require('./cloudtrace/v1'),\n    'v2': require('./cloudtrace/v2')\n  },\n  clouduseraccounts: {\n    'alpha': require('./clouduseraccounts/alpha'),\n    'beta': require('./clouduseraccounts/beta'),\n    'vm_alpha': require('./clouduseraccounts/vm_alpha'),\n    'vm_beta': require('./clouduseraccounts/vm_beta')\n  },\n  compute: {\n    'alpha': require('./compute/alpha'),\n    'beta': require('./compute/beta'),\n    'v1': require('./compute/v1')\n  },\n  container: {\n    'v1': require('./container/v1'),\n    'v1beta1': require('./container/v1beta1')\n  },\n  content: {\n    'v2': require('./content/v2'),\n    'v2sandbox': require('./content/v2sandbox')\n  },\n  customsearch: {\n    'v1': require('./customsearch/v1')\n  },\n  dataflow: {\n    'v1b3': require('./dataflow/v1b3')\n  },\n  dataproc: {\n    'v1': require('./dataproc/v1'),\n    'v1beta2': require('./dataproc/v1beta2')\n  },\n  datastore: {\n    'v1': require('./datastore/v1'),\n    'v1beta1': require('./datastore/v1beta1'),\n    'v1beta3': require('./datastore/v1beta3')\n  },\n  deploymentmanager: {\n    'alpha': require('./deploymentmanager/alpha'),\n    'v2': require('./deploymentmanager/v2'),\n    'v2beta': require('./deploymentmanager/v2beta')\n  },\n  dfareporting: {\n    'v2.8': require('./dfareporting/v2.8'),\n    'v3.0': require('./dfareporting/v3.0')\n  },\n  dialogflow: {\n    'v2beta1': require('./dialogflow/v2beta1')\n  },\n  digitalassetlinks: {\n    'v1': require('./digitalassetlinks/v1')\n  },\n  discovery: {\n    'v1': require('./discovery/v1')\n  },\n  dlp: {\n    'v2beta1': require('./dlp/v2beta1'),\n    'v2beta2': require('./dlp/v2beta2')\n  },\n  dns: {\n    'v1': require('./dns/v1'),\n    'v1beta2': require('./dns/v1beta2'),\n    'v2beta1': require('./dns/v2beta1')\n  },\n  doubleclickbidmanager: {\n    'v1': require('./doubleclickbidmanager/v1')\n  },\n  doubleclicksearch: {\n    'v2': require('./doubleclicksearch/v2')\n  },\n  drive: {\n    'v2': require('./drive/v2'),\n    'v3': require('./drive/v3')\n  },\n  firebasedynamiclinks: {\n    'v1': require('./firebasedynamiclinks/v1')\n  },\n  firebaserules: {\n    'v1': require('./firebaserules/v1')\n  },\n  firestore: {\n    'v1beta1': require('./firestore/v1beta1')\n  },\n  fitness: {\n    'v1': require('./fitness/v1')\n  },\n  fusiontables: {\n    'v1': require('./fusiontables/v1'),\n    'v2': require('./fusiontables/v2')\n  },\n  games: {\n    'v1': require('./games/v1')\n  },\n  gamesConfiguration: {\n    'v1configuration': require('./gamesConfiguration/v1configuration')\n  },\n  gamesManagement: {\n    'v1management': require('./gamesManagement/v1management')\n  },\n  genomics: {\n    'v1': require('./genomics/v1'),\n    'v1alpha2': require('./genomics/v1alpha2'),\n    'v2alpha1': require('./genomics/v2alpha1')\n  },\n  gmail: {\n    'v1': require('./gmail/v1')\n  },\n  groupsmigration: {\n    'v1': require('./groupsmigration/v1')\n  },\n  groupssettings: {\n    'v1': require('./groupssettings/v1')\n  },\n  iam: {\n    'v1': require('./iam/v1')\n  },\n  identitytoolkit: {\n    'v3': require('./identitytoolkit/v3')\n  },\n  kgsearch: {\n    'v1': require('./kgsearch/v1')\n  },\n  language: {\n    'v1': require('./language/v1'),\n    'v1beta1': require('./language/v1beta1'),\n    'v1beta2': require('./language/v1beta2')\n  },\n  licensing: {\n    'v1': require('./licensing/v1')\n  },\n  logging: {\n    'v2': require('./logging/v2'),\n    'v2beta1': require('./logging/v2beta1')\n  },\n  manufacturers: {\n    'v1': require('./manufacturers/v1')\n  },\n  mirror: {\n    'v1': require('./mirror/v1')\n  },\n  ml: {\n    'v1': require('./ml/v1')\n  },\n  monitoring: {\n    'v3': require('./monitoring/v3')\n  },\n  oauth2: {\n    'v1': require('./oauth2/v1'),\n    'v2': require('./oauth2/v2')\n  },\n  oslogin: {\n    'v1': require('./oslogin/v1'),\n    'v1alpha': require('./oslogin/v1alpha'),\n    'v1beta': require('./oslogin/v1beta')\n  },\n  pagespeedonline: {\n    'v1': require('./pagespeedonline/v1'),\n    'v2': require('./pagespeedonline/v2')\n  },\n  partners: {\n    'v2': require('./partners/v2')\n  },\n  people: {\n    'v1': require('./people/v1')\n  },\n  playcustomapp: {\n    'v1': require('./playcustomapp/v1')\n  },\n  plus: {\n    'v1': require('./plus/v1')\n  },\n  plusDomains: {\n    'v1': require('./plusDomains/v1')\n  },\n  poly: {\n    'v1': require('./poly/v1')\n  },\n  prediction: {\n    'v1.2': require('./prediction/v1.2'),\n    'v1.3': require('./prediction/v1.3'),\n    'v1.4': require('./prediction/v1.4'),\n    'v1.5': require('./prediction/v1.5'),\n    'v1.6': require('./prediction/v1.6')\n  },\n  proximitybeacon: {\n    'v1beta1': require('./proximitybeacon/v1beta1')\n  },\n  pubsub: {\n    'v1': require('./pubsub/v1'),\n    'v1beta1a': require('./pubsub/v1beta1a'),\n    'v1beta2': require('./pubsub/v1beta2')\n  },\n  replicapool: {\n    'v1beta1': require('./replicapool/v1beta1'),\n    'v1beta2': require('./replicapool/v1beta2')\n  },\n  replicapoolupdater: {\n    'v1beta1': require('./replicapoolupdater/v1beta1')\n  },\n  reseller: {\n    'v1': require('./reseller/v1')\n  },\n  resourceviews: {\n    'v1beta1': require('./resourceviews/v1beta1'),\n    'v1beta2': require('./resourceviews/v1beta2')\n  },\n  runtimeconfig: {\n    'v1': require('./runtimeconfig/v1'),\n    'v1beta1': require('./runtimeconfig/v1beta1')\n  },\n  safebrowsing: {\n    'v4': require('./safebrowsing/v4')\n  },\n  script: {\n    'v1': require('./script/v1')\n  },\n  searchconsole: {\n    'v1': require('./searchconsole/v1')\n  },\n  serviceconsumermanagement: {\n    'v1': require('./serviceconsumermanagement/v1')\n  },\n  servicecontrol: {\n    'v1': require('./servicecontrol/v1')\n  },\n  servicemanagement: {\n    'v1': require('./servicemanagement/v1')\n  },\n  serviceusage: {\n    'v1': require('./serviceusage/v1')\n  },\n  serviceuser: {\n    'v1': require('./serviceuser/v1')\n  },\n  sheets: {\n    'v4': require('./sheets/v4')\n  },\n  siteVerification: {\n    'v1': require('./siteVerification/v1')\n  },\n  slides: {\n    'v1': require('./slides/v1')\n  },\n  sourcerepo: {\n    'v1': require('./sourcerepo/v1')\n  },\n  spanner: {\n    'v1': require('./spanner/v1')\n  },\n  spectrum: {\n    'v1explorer': require('./spectrum/v1explorer')\n  },\n  speech: {\n    'v1': require('./speech/v1'),\n    'v1beta1': require('./speech/v1beta1')\n  },\n  sqladmin: {\n    'v1beta3': require('./sqladmin/v1beta3'),\n    'v1beta4': require('./sqladmin/v1beta4')\n  },\n  storage: {\n    'v1': require('./storage/v1'),\n    'v1beta1': require('./storage/v1beta1'),\n    'v1beta2': require('./storage/v1beta2')\n  },\n  storagetransfer: {\n    'v1': require('./storagetransfer/v1')\n  },\n  streetviewpublish: {\n    'v1': require('./streetviewpublish/v1')\n  },\n  surveys: {\n    'v2': require('./surveys/v2')\n  },\n  tagmanager: {\n    'v1': require('./tagmanager/v1'),\n    'v2': require('./tagmanager/v2')\n  },\n  taskqueue: {\n    'v1beta1': require('./taskqueue/v1beta1'),\n    'v1beta2': require('./taskqueue/v1beta2')\n  },\n  tasks: {\n    'v1': require('./tasks/v1')\n  },\n  testing: {\n    'v1': require('./testing/v1')\n  },\n  toolresults: {\n    'v1beta3': require('./toolresults/v1beta3')\n  },\n  tpu: {\n    'v1alpha1': require('./tpu/v1alpha1')\n  },\n  translate: {\n    'v2': require('./translate/v2')\n  },\n  urlshortener: {\n    'v1': require('./urlshortener/v1')\n  },\n  vault: {\n    'v1': require('./vault/v1')\n  },\n  videointelligence: {\n    'v1beta1': require('./videointelligence/v1beta1')\n  },\n  vision: {\n    'v1': require('./vision/v1'),\n    'v1p1beta1': require('./vision/v1p1beta1'),\n    'v1p2beta1': require('./vision/v1p2beta1')\n  },\n  webfonts: {\n    'v1': require('./webfonts/v1')\n  },\n  webmasters: {\n    'v3': require('./webmasters/v3')\n  },\n  youtube: {\n    'v3': require('./youtube/v3')\n  },\n  youtubeAnalytics: {\n    'v1': require('./youtubeAnalytics/v1'),\n    'v1beta1': require('./youtubeAnalytics/v1beta1')\n  },\n  youtubereporting: {\n    'v1': require('./youtubereporting/v1')\n  }\n};\n\nfunction getAPI(api, options) {\n  var type = typeof options;\n  var version;\n\n  if (type === 'string') {\n    version = options;\n    options = {};\n  } else if (type === 'object') {\n    version = options.version;\n    delete options.version;\n  } else {\n    throw new Error('Argument error: Accepts only string or object');\n  }\n\n  try {\n    var endpoint = APIS[api][path.basename(version)];\n    var ep = new endpoint(options);\n    ep.google = this; // for drive.google.transporter\n\n    return Object.freeze(ep); // create new & freeze\n  } catch (e) {\n    throw new Error(util.format('Unable to load endpoint %s(\"%s\"): %s', api, version, e.message));\n  }\n}\n\nvar GeneratedAPIs =\n/** @class */\nfunction () {\n  function GeneratedAPIs() {}\n\n  GeneratedAPIs.prototype.abusiveexperiencereport = function (options) {\n    return getAPI.call(this, 'abusiveexperiencereport', options);\n  };\n\n  GeneratedAPIs.prototype.acceleratedmobilepageurl = function (options) {\n    return getAPI.call(this, 'acceleratedmobilepageurl', options);\n  };\n\n  GeneratedAPIs.prototype.adexchangebuyer = function (options) {\n    return getAPI.call(this, 'adexchangebuyer', options);\n  };\n\n  GeneratedAPIs.prototype.adexchangebuyer2 = function (options) {\n    return getAPI.call(this, 'adexchangebuyer2', options);\n  };\n\n  GeneratedAPIs.prototype.adexchangeseller = function (options) {\n    return getAPI.call(this, 'adexchangeseller', options);\n  };\n\n  GeneratedAPIs.prototype.adexperiencereport = function (options) {\n    return getAPI.call(this, 'adexperiencereport', options);\n  };\n\n  GeneratedAPIs.prototype.admin = function (options) {\n    return getAPI.call(this, 'admin', options);\n  };\n\n  GeneratedAPIs.prototype.adsense = function (options) {\n    return getAPI.call(this, 'adsense', options);\n  };\n\n  GeneratedAPIs.prototype.adsensehost = function (options) {\n    return getAPI.call(this, 'adsensehost', options);\n  };\n\n  GeneratedAPIs.prototype.analytics = function (options) {\n    return getAPI.call(this, 'analytics', options);\n  };\n\n  GeneratedAPIs.prototype.analyticsreporting = function (options) {\n    return getAPI.call(this, 'analyticsreporting', options);\n  };\n\n  GeneratedAPIs.prototype.androiddeviceprovisioning = function (options) {\n    return getAPI.call(this, 'androiddeviceprovisioning', options);\n  };\n\n  GeneratedAPIs.prototype.androidenterprise = function (options) {\n    return getAPI.call(this, 'androidenterprise', options);\n  };\n\n  GeneratedAPIs.prototype.androidmanagement = function (options) {\n    return getAPI.call(this, 'androidmanagement', options);\n  };\n\n  GeneratedAPIs.prototype.androidpublisher = function (options) {\n    return getAPI.call(this, 'androidpublisher', options);\n  };\n\n  GeneratedAPIs.prototype.appengine = function (options) {\n    return getAPI.call(this, 'appengine', options);\n  };\n\n  GeneratedAPIs.prototype.appsactivity = function (options) {\n    return getAPI.call(this, 'appsactivity', options);\n  };\n\n  GeneratedAPIs.prototype.appstate = function (options) {\n    return getAPI.call(this, 'appstate', options);\n  };\n\n  GeneratedAPIs.prototype.bigquery = function (options) {\n    return getAPI.call(this, 'bigquery', options);\n  };\n\n  GeneratedAPIs.prototype.bigquerydatatransfer = function (options) {\n    return getAPI.call(this, 'bigquerydatatransfer', options);\n  };\n\n  GeneratedAPIs.prototype.blogger = function (options) {\n    return getAPI.call(this, 'blogger', options);\n  };\n\n  GeneratedAPIs.prototype.books = function (options) {\n    return getAPI.call(this, 'books', options);\n  };\n\n  GeneratedAPIs.prototype.calendar = function (options) {\n    return getAPI.call(this, 'calendar', options);\n  };\n\n  GeneratedAPIs.prototype.chat = function (options) {\n    return getAPI.call(this, 'chat', options);\n  };\n\n  GeneratedAPIs.prototype.civicinfo = function (options) {\n    return getAPI.call(this, 'civicinfo', options);\n  };\n\n  GeneratedAPIs.prototype.classroom = function (options) {\n    return getAPI.call(this, 'classroom', options);\n  };\n\n  GeneratedAPIs.prototype.cloudbilling = function (options) {\n    return getAPI.call(this, 'cloudbilling', options);\n  };\n\n  GeneratedAPIs.prototype.cloudbuild = function (options) {\n    return getAPI.call(this, 'cloudbuild', options);\n  };\n\n  GeneratedAPIs.prototype.clouddebugger = function (options) {\n    return getAPI.call(this, 'clouddebugger', options);\n  };\n\n  GeneratedAPIs.prototype.clouderrorreporting = function (options) {\n    return getAPI.call(this, 'clouderrorreporting', options);\n  };\n\n  GeneratedAPIs.prototype.cloudfunctions = function (options) {\n    return getAPI.call(this, 'cloudfunctions', options);\n  };\n\n  GeneratedAPIs.prototype.cloudiot = function (options) {\n    return getAPI.call(this, 'cloudiot', options);\n  };\n\n  GeneratedAPIs.prototype.cloudkms = function (options) {\n    return getAPI.call(this, 'cloudkms', options);\n  };\n\n  GeneratedAPIs.prototype.cloudresourcemanager = function (options) {\n    return getAPI.call(this, 'cloudresourcemanager', options);\n  };\n\n  GeneratedAPIs.prototype.cloudshell = function (options) {\n    return getAPI.call(this, 'cloudshell', options);\n  };\n\n  GeneratedAPIs.prototype.cloudtasks = function (options) {\n    return getAPI.call(this, 'cloudtasks', options);\n  };\n\n  GeneratedAPIs.prototype.cloudtrace = function (options) {\n    return getAPI.call(this, 'cloudtrace', options);\n  };\n\n  GeneratedAPIs.prototype.clouduseraccounts = function (options) {\n    return getAPI.call(this, 'clouduseraccounts', options);\n  };\n\n  GeneratedAPIs.prototype.compute = function (options) {\n    return getAPI.call(this, 'compute', options);\n  };\n\n  GeneratedAPIs.prototype.container = function (options) {\n    return getAPI.call(this, 'container', options);\n  };\n\n  GeneratedAPIs.prototype.content = function (options) {\n    return getAPI.call(this, 'content', options);\n  };\n\n  GeneratedAPIs.prototype.customsearch = function (options) {\n    return getAPI.call(this, 'customsearch', options);\n  };\n\n  GeneratedAPIs.prototype.dataflow = function (options) {\n    return getAPI.call(this, 'dataflow', options);\n  };\n\n  GeneratedAPIs.prototype.dataproc = function (options) {\n    return getAPI.call(this, 'dataproc', options);\n  };\n\n  GeneratedAPIs.prototype.datastore = function (options) {\n    return getAPI.call(this, 'datastore', options);\n  };\n\n  GeneratedAPIs.prototype.deploymentmanager = function (options) {\n    return getAPI.call(this, 'deploymentmanager', options);\n  };\n\n  GeneratedAPIs.prototype.dfareporting = function (options) {\n    return getAPI.call(this, 'dfareporting', options);\n  };\n\n  GeneratedAPIs.prototype.dialogflow = function (options) {\n    return getAPI.call(this, 'dialogflow', options);\n  };\n\n  GeneratedAPIs.prototype.digitalassetlinks = function (options) {\n    return getAPI.call(this, 'digitalassetlinks', options);\n  };\n\n  GeneratedAPIs.prototype.discovery = function (options) {\n    return getAPI.call(this, 'discovery', options);\n  };\n\n  GeneratedAPIs.prototype.dlp = function (options) {\n    return getAPI.call(this, 'dlp', options);\n  };\n\n  GeneratedAPIs.prototype.dns = function (options) {\n    return getAPI.call(this, 'dns', options);\n  };\n\n  GeneratedAPIs.prototype.doubleclickbidmanager = function (options) {\n    return getAPI.call(this, 'doubleclickbidmanager', options);\n  };\n\n  GeneratedAPIs.prototype.doubleclicksearch = function (options) {\n    return getAPI.call(this, 'doubleclicksearch', options);\n  };\n\n  GeneratedAPIs.prototype.drive = function (options) {\n    return getAPI.call(this, 'drive', options);\n  };\n\n  GeneratedAPIs.prototype.firebasedynamiclinks = function (options) {\n    return getAPI.call(this, 'firebasedynamiclinks', options);\n  };\n\n  GeneratedAPIs.prototype.firebaserules = function (options) {\n    return getAPI.call(this, 'firebaserules', options);\n  };\n\n  GeneratedAPIs.prototype.firestore = function (options) {\n    return getAPI.call(this, 'firestore', options);\n  };\n\n  GeneratedAPIs.prototype.fitness = function (options) {\n    return getAPI.call(this, 'fitness', options);\n  };\n\n  GeneratedAPIs.prototype.fusiontables = function (options) {\n    return getAPI.call(this, 'fusiontables', options);\n  };\n\n  GeneratedAPIs.prototype.games = function (options) {\n    return getAPI.call(this, 'games', options);\n  };\n\n  GeneratedAPIs.prototype.gamesConfiguration = function (options) {\n    return getAPI.call(this, 'gamesConfiguration', options);\n  };\n\n  GeneratedAPIs.prototype.gamesManagement = function (options) {\n    return getAPI.call(this, 'gamesManagement', options);\n  };\n\n  GeneratedAPIs.prototype.genomics = function (options) {\n    return getAPI.call(this, 'genomics', options);\n  };\n\n  GeneratedAPIs.prototype.gmail = function (options) {\n    return getAPI.call(this, 'gmail', options);\n  };\n\n  GeneratedAPIs.prototype.groupsmigration = function (options) {\n    return getAPI.call(this, 'groupsmigration', options);\n  };\n\n  GeneratedAPIs.prototype.groupssettings = function (options) {\n    return getAPI.call(this, 'groupssettings', options);\n  };\n\n  GeneratedAPIs.prototype.iam = function (options) {\n    return getAPI.call(this, 'iam', options);\n  };\n\n  GeneratedAPIs.prototype.identitytoolkit = function (options) {\n    return getAPI.call(this, 'identitytoolkit', options);\n  };\n\n  GeneratedAPIs.prototype.kgsearch = function (options) {\n    return getAPI.call(this, 'kgsearch', options);\n  };\n\n  GeneratedAPIs.prototype.language = function (options) {\n    return getAPI.call(this, 'language', options);\n  };\n\n  GeneratedAPIs.prototype.licensing = function (options) {\n    return getAPI.call(this, 'licensing', options);\n  };\n\n  GeneratedAPIs.prototype.logging = function (options) {\n    return getAPI.call(this, 'logging', options);\n  };\n\n  GeneratedAPIs.prototype.manufacturers = function (options) {\n    return getAPI.call(this, 'manufacturers', options);\n  };\n\n  GeneratedAPIs.prototype.mirror = function (options) {\n    return getAPI.call(this, 'mirror', options);\n  };\n\n  GeneratedAPIs.prototype.ml = function (options) {\n    return getAPI.call(this, 'ml', options);\n  };\n\n  GeneratedAPIs.prototype.monitoring = function (options) {\n    return getAPI.call(this, 'monitoring', options);\n  };\n\n  GeneratedAPIs.prototype.oauth2 = function (options) {\n    return getAPI.call(this, 'oauth2', options);\n  };\n\n  GeneratedAPIs.prototype.oslogin = function (options) {\n    return getAPI.call(this, 'oslogin', options);\n  };\n\n  GeneratedAPIs.prototype.pagespeedonline = function (options) {\n    return getAPI.call(this, 'pagespeedonline', options);\n  };\n\n  GeneratedAPIs.prototype.partners = function (options) {\n    return getAPI.call(this, 'partners', options);\n  };\n\n  GeneratedAPIs.prototype.people = function (options) {\n    return getAPI.call(this, 'people', options);\n  };\n\n  GeneratedAPIs.prototype.playcustomapp = function (options) {\n    return getAPI.call(this, 'playcustomapp', options);\n  };\n\n  GeneratedAPIs.prototype.plus = function (options) {\n    return getAPI.call(this, 'plus', options);\n  };\n\n  GeneratedAPIs.prototype.plusDomains = function (options) {\n    return getAPI.call(this, 'plusDomains', options);\n  };\n\n  GeneratedAPIs.prototype.poly = function (options) {\n    return getAPI.call(this, 'poly', options);\n  };\n\n  GeneratedAPIs.prototype.prediction = function (options) {\n    return getAPI.call(this, 'prediction', options);\n  };\n\n  GeneratedAPIs.prototype.proximitybeacon = function (options) {\n    return getAPI.call(this, 'proximitybeacon', options);\n  };\n\n  GeneratedAPIs.prototype.pubsub = function (options) {\n    return getAPI.call(this, 'pubsub', options);\n  };\n\n  GeneratedAPIs.prototype.replicapool = function (options) {\n    return getAPI.call(this, 'replicapool', options);\n  };\n\n  GeneratedAPIs.prototype.replicapoolupdater = function (options) {\n    return getAPI.call(this, 'replicapoolupdater', options);\n  };\n\n  GeneratedAPIs.prototype.reseller = function (options) {\n    return getAPI.call(this, 'reseller', options);\n  };\n\n  GeneratedAPIs.prototype.resourceviews = function (options) {\n    return getAPI.call(this, 'resourceviews', options);\n  };\n\n  GeneratedAPIs.prototype.runtimeconfig = function (options) {\n    return getAPI.call(this, 'runtimeconfig', options);\n  };\n\n  GeneratedAPIs.prototype.safebrowsing = function (options) {\n    return getAPI.call(this, 'safebrowsing', options);\n  };\n\n  GeneratedAPIs.prototype.script = function (options) {\n    return getAPI.call(this, 'script', options);\n  };\n\n  GeneratedAPIs.prototype.searchconsole = function (options) {\n    return getAPI.call(this, 'searchconsole', options);\n  };\n\n  GeneratedAPIs.prototype.serviceconsumermanagement = function (options) {\n    return getAPI.call(this, 'serviceconsumermanagement', options);\n  };\n\n  GeneratedAPIs.prototype.servicecontrol = function (options) {\n    return getAPI.call(this, 'servicecontrol', options);\n  };\n\n  GeneratedAPIs.prototype.servicemanagement = function (options) {\n    return getAPI.call(this, 'servicemanagement', options);\n  };\n\n  GeneratedAPIs.prototype.serviceusage = function (options) {\n    return getAPI.call(this, 'serviceusage', options);\n  };\n\n  GeneratedAPIs.prototype.serviceuser = function (options) {\n    return getAPI.call(this, 'serviceuser', options);\n  };\n\n  GeneratedAPIs.prototype.sheets = function (options) {\n    return getAPI.call(this, 'sheets', options);\n  };\n\n  GeneratedAPIs.prototype.siteVerification = function (options) {\n    return getAPI.call(this, 'siteVerification', options);\n  };\n\n  GeneratedAPIs.prototype.slides = function (options) {\n    return getAPI.call(this, 'slides', options);\n  };\n\n  GeneratedAPIs.prototype.sourcerepo = function (options) {\n    return getAPI.call(this, 'sourcerepo', options);\n  };\n\n  GeneratedAPIs.prototype.spanner = function (options) {\n    return getAPI.call(this, 'spanner', options);\n  };\n\n  GeneratedAPIs.prototype.spectrum = function (options) {\n    return getAPI.call(this, 'spectrum', options);\n  };\n\n  GeneratedAPIs.prototype.speech = function (options) {\n    return getAPI.call(this, 'speech', options);\n  };\n\n  GeneratedAPIs.prototype.sqladmin = function (options) {\n    return getAPI.call(this, 'sqladmin', options);\n  };\n\n  GeneratedAPIs.prototype.storage = function (options) {\n    return getAPI.call(this, 'storage', options);\n  };\n\n  GeneratedAPIs.prototype.storagetransfer = function (options) {\n    return getAPI.call(this, 'storagetransfer', options);\n  };\n\n  GeneratedAPIs.prototype.streetviewpublish = function (options) {\n    return getAPI.call(this, 'streetviewpublish', options);\n  };\n\n  GeneratedAPIs.prototype.surveys = function (options) {\n    return getAPI.call(this, 'surveys', options);\n  };\n\n  GeneratedAPIs.prototype.tagmanager = function (options) {\n    return getAPI.call(this, 'tagmanager', options);\n  };\n\n  GeneratedAPIs.prototype.taskqueue = function (options) {\n    return getAPI.call(this, 'taskqueue', options);\n  };\n\n  GeneratedAPIs.prototype.tasks = function (options) {\n    return getAPI.call(this, 'tasks', options);\n  };\n\n  GeneratedAPIs.prototype.testing = function (options) {\n    return getAPI.call(this, 'testing', options);\n  };\n\n  GeneratedAPIs.prototype.toolresults = function (options) {\n    return getAPI.call(this, 'toolresults', options);\n  };\n\n  GeneratedAPIs.prototype.tpu = function (options) {\n    return getAPI.call(this, 'tpu', options);\n  };\n\n  GeneratedAPIs.prototype.translate = function (options) {\n    return getAPI.call(this, 'translate', options);\n  };\n\n  GeneratedAPIs.prototype.urlshortener = function (options) {\n    return getAPI.call(this, 'urlshortener', options);\n  };\n\n  GeneratedAPIs.prototype.vault = function (options) {\n    return getAPI.call(this, 'vault', options);\n  };\n\n  GeneratedAPIs.prototype.videointelligence = function (options) {\n    return getAPI.call(this, 'videointelligence', options);\n  };\n\n  GeneratedAPIs.prototype.vision = function (options) {\n    return getAPI.call(this, 'vision', options);\n  };\n\n  GeneratedAPIs.prototype.webfonts = function (options) {\n    return getAPI.call(this, 'webfonts', options);\n  };\n\n  GeneratedAPIs.prototype.webmasters = function (options) {\n    return getAPI.call(this, 'webmasters', options);\n  };\n\n  GeneratedAPIs.prototype.youtube = function (options) {\n    return getAPI.call(this, 'youtube', options);\n  };\n\n  GeneratedAPIs.prototype.youtubeAnalytics = function (options) {\n    return getAPI.call(this, 'youtubeAnalytics', options);\n  };\n\n  GeneratedAPIs.prototype.youtubereporting = function (options) {\n    return getAPI.call(this, 'youtubereporting', options);\n  };\n\n  return GeneratedAPIs;\n}();\n\nexports.GeneratedAPIs = GeneratedAPIs;","map":null,"metadata":{},"sourceType":"script"}