{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\shilan\\\\Desktop\\\\chartTest\\\\reactcharts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\shilan\\\\Desktop\\\\chartTest\\\\reactcharts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\shilan\\\\Desktop\\\\chartTest\\\\reactcharts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\shilan\\\\Desktop\\\\chartTest\\\\reactcharts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\shilan\\\\Desktop\\\\chartTest\\\\reactcharts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\shilan\\\\Desktop\\\\chartTest\\\\reactcharts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\shilan\\\\Desktop\\\\chartTest\\\\reactcharts\\\\src\\\\MApp.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Chart from './components/Chart';\nimport InvestSlider from './components/InvestSlider';\nimport ScenarioSlider from './components/ScenarioSlider';\nvar API = 'https://sheets.googleapis.com/v4/spreadsheets/176E8o0qhfHVTjYIwuk5kAWNggYOD526d4HBqTegJ4zM/values:batchGet?' + 'ranges=Investment!C3:C7&ranges=Worst!F12:V12&' + //for base investments & worst data\n'ranges=Worst!F17:V17&ranges=Worst!F22:V22&ranges=Worst!F27:V27&ranges=Worst!F32:V32&' + 'ranges=Mid!F12:V12&ranges=Mid!F17:V17&ranges=Mid!F22:V22&ranges=Mid!F27:V27&ranges=Mid!F32:V32&' + 'ranges=Best!F12:V12&ranges=Best!F17:V17&ranges=Best!F22:V22&ranges=Best!F27:V27&ranges=Best!F32:V32&' + 'valueRenderOption=UNFORMATTED_VALUE&majorDimension=ROWS&key=AIzaSyBhw79t2J0aRVOT2a0P0-Jh81TvwhK0VMI';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.updateRange = _this.updateRange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      sliderValue: 1,\n      ScenarioValue: 1,\n      baseInvestmet: {\n        data: [0, 0, 0, 0, 0]\n      },\n      maxVal: 1,\n      chartData: {\n        labels: ['', '1 year', '2 year', '3 year', '4 year', '5 year'],\n        datasets: [{\n          label: 'ROI',\n          data: [],\n          backgroundColor: ['#447D00']\n        }, {\n          label: 'ROI',\n          data: {},\n          backgroundColor: ['#440000']\n        }, {\n          label: 'ROI',\n          data: [],\n          backgroundColor: ['#447DB9']\n        }]\n      },\n      WorstSets: [[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]],\n      MidSets: [[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]],\n      BestSets: [[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]]\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"setDatsets\",\n    value: function setDatsets() {\n      var _this2 = this;\n\n      fetch(API).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        var worstData = _this2.state.WorstSets;\n        var midData = _this2.state.MidSets;\n        var bestData = _this2.state.BestSets;\n\n        for (var i = 0; i < 3; i++) {\n          for (var j = 0; j < 5; j++) {\n            var temp = data.valueRanges[i * 5 + (j + 1)].values[0];\n\n            switch (i) {\n              case 0:\n                worstData[j][1] = temp[0];\n                worstData[j][2] = temp[4];\n                worstData[j][3] = temp[8];\n                worstData[j][4] = temp[12];\n                worstData[j][5] = temp[16];\n                break;\n\n              case 1:\n                midData[j][1] = temp[0];\n                midData[j][2] = temp[4];\n                midData[j][3] = temp[8];\n                midData[j][4] = temp[12];\n                midData[j][5] = temp[16];\n                break;\n\n              case 2:\n                bestData[j][1] = temp[0];\n                bestData[j][2] = temp[4];\n                bestData[j][3] = temp[8];\n                bestData[j][4] = temp[12];\n                bestData[j][5] = temp[16];\n                break;\n            }\n          }\n        }\n\n        var tempMax = parseFloat(Math.round(bestData[0][5] * 100) / 100).toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n        var tempBase = _this2.state.baseInvestmet;\n\n        for (var _i = 0; _i < data.valueRanges[0].values.length; _i++) {\n          tempBase.data[_i] = parseFloat(Math.round(data.valueRanges[0].values[_i] * 100) / 100).toFixed(2);\n        }\n\n        _this2.setState({\n          baseInvestmet: tempBase,\n          WorstSets: worstData,\n          MidSets: midData,\n          BestSets: bestData,\n          maxVal: tempMax\n        });\n      });\n      this.setBaseData();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setDatsets();\n    }\n  }, {\n    key: \"updateRange\",\n    value: function updateRange(val) {\n      var chartData = this.state.chartData;\n      console.log('update range', this.state.baseInvestmet.data[val - 1]);\n      chartData.datasets[0].data = this.state.WorstSets[val - 1];\n      chartData.datasets[0].label = parseFloat(Math.round(this.state.baseInvestmet.data[val - 1] * 100) / 100).toFixed(2);\n      chartData.datasets[1].data = this.state.MidSets[val - 1];\n      chartData.datasets[2].data = this.state.BestSets[val - 1];\n      var tempMax = parseFloat(Math.round(chartData.datasets[2].data[5] * 100) / 100).toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n      this.setState({\n        sliderValue: val,\n        chartData: chartData,\n        maxVal: tempMax\n      });\n    }\n  }, {\n    key: \"setBaseData\",\n    value: function setBaseData() {\n      this.updateRange(1);\n    }\n  }, {\n    key: \"datasetKeyProvider\",\n    value: function datasetKeyProvider() {\n      return Math.random();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var stylePadding = {\n        width: 600\n      };\n      return React.createElement(\"div\", {\n        className: \"App\",\n        style: stylePadding,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"Total portfolio value: $\", this.state.maxVal), React.createElement(Chart, {\n        chartData: this.state.chartData,\n        sidebarVal: this.state.baseInvestmet,\n        location: \"1 year\",\n        legendPosition: \"bottom\",\n        redraw: true,\n        datasetKeyProvider: this.datasetKeyProvider,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }), React.createElement(InvestSlider, {\n        range: this.state.sliderValue,\n        handle: this.updateRange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\shilan\\Desktop\\chartTest\\reactcharts\\src\\MApp.js"],"names":["React","Component","Chart","InvestSlider","ScenarioSlider","API","App","props","updateRange","bind","state","sliderValue","ScenarioValue","baseInvestmet","data","maxVal","chartData","labels","datasets","label","backgroundColor","WorstSets","MidSets","BestSets","fetch","then","response","json","worstData","midData","bestData","i","j","temp","valueRanges","values","tempMax","parseFloat","Math","round","toFixed","toString","replace","tempBase","length","setState","setBaseData","setDatsets","val","console","log","random","stylePadding","width","datasetKeyProvider"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,IAAMC,GAAG,GAAG,gHACZ,+CADY,GACoC;AAChD,sFAFY,GAGZ,iGAHY,GAIZ,sGAJY,GAKZ,qGALA;;IAMMC,G;;;;;AACL,eAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;AACA,UAAKC,WAAL,GAAkB,MAAKA,WAAL,CAAiBC,IAAjB,uDAAlB;AACA,UAAKC,KAAL,GAAa;AACZC,MAAAA,WAAW,EAAC,CADA;AAEZC,MAAAA,aAAa,EAAC,CAFF;AAGZC,MAAAA,aAAa,EAAC;AAACC,QAAAA,IAAI,EAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT;AAAN,OAHF;AAIZC,MAAAA,MAAM,EAAC,CAJK;AAKZC,MAAAA,SAAS,EAAC;AACTC,QAAAA,MAAM,EAAE,CAAC,EAAD,EAAI,QAAJ,EAAa,QAAb,EAAsB,QAAtB,EAA+B,QAA/B,EAAwC,QAAxC,CADC;AAETC,QAAAA,QAAQ,EAAC,CAAC;AACVC,UAAAA,KAAK,EAAC,KADI;AAEVL,UAAAA,IAAI,EAAC,EAFK;AAGVM,UAAAA,eAAe,EAAC,CACd,SADc;AAHN,SAAD,EAMP;AACFD,UAAAA,KAAK,EAAC,KADJ;AAEFL,UAAAA,IAAI,EAAC,EAFH;AAGFM,UAAAA,eAAe,EAAC,CACd,SADc;AAHd,SANO,EAYP;AACFD,UAAAA,KAAK,EAAC,KADJ;AAEFL,UAAAA,IAAI,EAAC,EAFH;AAGFM,UAAAA,eAAe,EAAC,CACd,SADc;AAHd,SAZO;AAFA,OALE;AA2BXC,MAAAA,SAAS,EAAC,CAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,CAAD,EAAe,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,CAAf,EAA6B,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,CAA7B,EAA2C,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,CAA3C,EAAyD,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,CAAzD,CA3BC;AA4BXC,MAAAA,OAAO,EAAC,CAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,CAAD,EAAe,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,CAAf,EAA6B,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,CAA7B,EAA2C,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,CAA3C,EAAyD,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,CAAzD,CA5BG;AA6BXC,MAAAA,QAAQ,EAAC,CAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,CAAD,EAAe,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,CAAf,EAA6B,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,CAA7B,EAA2C,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,CAA3C,EAAyD,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,CAAzD;AA7BE,KAAb;AAHiB;AAkCjB;;;;iCACW;AAAA;;AACRC,MAAAA,KAAK,CAACnB,GAAD,CAAL,CAAWoB,IAAX,CAAgB,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OAAxB,EAA6CF,IAA7C,CAAkD,UAAAX,IAAI,EAAI;AAC5D,YAAMc,SAAS,GAAC,MAAI,CAAClB,KAAL,CAAWW,SAA3B;AACA,YAAMQ,OAAO,GAAC,MAAI,CAACnB,KAAL,CAAWY,OAAzB;AACA,YAAMQ,QAAQ,GAAC,MAAI,CAACpB,KAAL,CAAWa,QAA1B;;AACA,aAAI,IAAIQ,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,CAAd,EAAgBA,CAAC,EAAjB,EAAoB;AACnB,eAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,CAAd,EAAgBA,CAAC,EAAjB,EAAoB;AACnB,gBAAIC,IAAI,GAACnB,IAAI,CAACoB,WAAL,CAAkBH,CAAC,GAAC,CAAH,IAAOC,CAAC,GAAC,CAAT,CAAjB,EAA8BG,MAA9B,CAAqC,CAArC,CAAT;;AACA,oBAAQJ,CAAR;AACC,mBAAK,CAAL;AACDH,gBAAAA,SAAS,CAACI,CAAD,CAAT,CAAa,CAAb,IAAgBC,IAAI,CAAC,CAAD,CAApB;AACAL,gBAAAA,SAAS,CAACI,CAAD,CAAT,CAAa,CAAb,IAAgBC,IAAI,CAAC,CAAD,CAApB;AACAL,gBAAAA,SAAS,CAACI,CAAD,CAAT,CAAa,CAAb,IAAgBC,IAAI,CAAC,CAAD,CAApB;AACAL,gBAAAA,SAAS,CAACI,CAAD,CAAT,CAAa,CAAb,IAAgBC,IAAI,CAAC,EAAD,CAApB;AACAL,gBAAAA,SAAS,CAACI,CAAD,CAAT,CAAa,CAAb,IAAgBC,IAAI,CAAC,EAAD,CAApB;AACC;;AACA,mBAAK,CAAL;AACDJ,gBAAAA,OAAO,CAACG,CAAD,CAAP,CAAW,CAAX,IAAcC,IAAI,CAAC,CAAD,CAAlB;AACAJ,gBAAAA,OAAO,CAACG,CAAD,CAAP,CAAW,CAAX,IAAcC,IAAI,CAAC,CAAD,CAAlB;AACAJ,gBAAAA,OAAO,CAACG,CAAD,CAAP,CAAW,CAAX,IAAcC,IAAI,CAAC,CAAD,CAAlB;AACAJ,gBAAAA,OAAO,CAACG,CAAD,CAAP,CAAW,CAAX,IAAcC,IAAI,CAAC,EAAD,CAAlB;AACAJ,gBAAAA,OAAO,CAACG,CAAD,CAAP,CAAW,CAAX,IAAcC,IAAI,CAAC,EAAD,CAAlB;AACC;;AACA,mBAAK,CAAL;AACDH,gBAAAA,QAAQ,CAACE,CAAD,CAAR,CAAY,CAAZ,IAAeC,IAAI,CAAC,CAAD,CAAnB;AACAH,gBAAAA,QAAQ,CAACE,CAAD,CAAR,CAAY,CAAZ,IAAeC,IAAI,CAAC,CAAD,CAAnB;AACAH,gBAAAA,QAAQ,CAACE,CAAD,CAAR,CAAY,CAAZ,IAAeC,IAAI,CAAC,CAAD,CAAnB;AACAH,gBAAAA,QAAQ,CAACE,CAAD,CAAR,CAAY,CAAZ,IAAeC,IAAI,CAAC,EAAD,CAAnB;AACAH,gBAAAA,QAAQ,CAACE,CAAD,CAAR,CAAY,CAAZ,IAAeC,IAAI,CAAC,EAAD,CAAnB;AACC;AArBD;AAuBA;AACD;;AACD,YAAIG,OAAO,GAAEC,UAAU,CAACC,IAAI,CAACC,KAAL,CAAWT,QAAQ,CAAC,CAAD,CAAR,CAAY,CAAZ,IAAiB,GAA5B,IAAmC,GAApC,CAAV,CAAmDU,OAAnD,CAA2D,CAA3D,CAAD,CAAgEC,QAAhE,GAA2EC,OAA3E,CAAmF,uBAAnF,EAA4G,GAA5G,CAAZ;AAED,YAAMC,QAAQ,GAAC,MAAI,CAACjC,KAAL,CAAWG,aAA1B;;AACA,aAAI,IAAIkB,EAAC,GAAC,CAAV,EAAYA,EAAC,GAACjB,IAAI,CAACoB,WAAL,CAAiB,CAAjB,EAAoBC,MAApB,CAA2BS,MAAzC,EAAgDb,EAAC,EAAjD,EAAoD;AACnDY,UAAAA,QAAQ,CAAC7B,IAAT,CAAciB,EAAd,IAAiBM,UAAU,CAACC,IAAI,CAACC,KAAL,CAAWzB,IAAI,CAACoB,WAAL,CAAiB,CAAjB,EAAoBC,MAApB,CAA2BJ,EAA3B,IAA8B,GAAzC,IAA8C,GAA/C,CAAV,CAA8DS,OAA9D,CAAsE,CAAtE,CAAjB;AACA;;AACD,QAAA,MAAI,CAACK,QAAL,CAAc;AACbhC,UAAAA,aAAa,EAAC8B,QADD;AAEbtB,UAAAA,SAAS,EAACO,SAFG;AAGbN,UAAAA,OAAO,EAACO,OAHK;AAIbN,UAAAA,QAAQ,EAACO,QAJI;AAKbf,UAAAA,MAAM,EAACqB;AALM,SAAd;AAMC,OA5CE;AA6CH,WAAKU,WAAL;AACA;;;wCACkB;AAClB,WAAKC,UAAL;AACA;;;gCACWC,G,EAAK;AAChB,UAAMhC,SAAS,GAAG,KAAKN,KAAL,CAAWM,SAA7B;AACAiC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2B,KAAKxC,KAAL,CAAWG,aAAX,CAAyBC,IAAzB,CAA8BkC,GAAG,GAAC,CAAlC,CAA3B;AACAhC,MAAAA,SAAS,CAACE,QAAV,CAAmB,CAAnB,EAAsBJ,IAAtB,GAA2B,KAAKJ,KAAL,CAAWW,SAAX,CAAqB2B,GAAG,GAAC,CAAzB,CAA3B;AACAhC,MAAAA,SAAS,CAACE,QAAV,CAAmB,CAAnB,EAAsBC,KAAtB,GAA4BkB,UAAU,CAACC,IAAI,CAACC,KAAL,CAAW,KAAK7B,KAAL,CAAWG,aAAX,CAAyBC,IAAzB,CAA8BkC,GAAG,GAAC,CAAlC,IAAqC,GAAhD,IAAqD,GAAtD,CAAV,CAAqER,OAArE,CAA6E,CAA7E,CAA5B;AACAxB,MAAAA,SAAS,CAACE,QAAV,CAAmB,CAAnB,EAAsBJ,IAAtB,GAA2B,KAAKJ,KAAL,CAAWY,OAAX,CAAmB0B,GAAG,GAAC,CAAvB,CAA3B;AACAhC,MAAAA,SAAS,CAACE,QAAV,CAAmB,CAAnB,EAAsBJ,IAAtB,GAA2B,KAAKJ,KAAL,CAAWa,QAAX,CAAoByB,GAAG,GAAC,CAAxB,CAA3B;AACC,UAAIZ,OAAO,GAAEC,UAAU,CAACC,IAAI,CAACC,KAAL,CAAWvB,SAAS,CAACE,QAAV,CAAmB,CAAnB,EAAsBJ,IAAtB,CAA2B,CAA3B,IAAgC,GAA3C,IAAkD,GAAnD,CAAV,CAAkE0B,OAAlE,CAA0E,CAA1E,CAAD,CAA+EC,QAA/E,GAA0FC,OAA1F,CAAkG,uBAAlG,EAA2H,GAA3H,CAAZ;AACD,WAAKG,QAAL,CAAc;AACZlC,QAAAA,WAAW,EAAEqC,GADD;AAEZhC,QAAAA,SAAS,EAAEA,SAFC;AAGZD,QAAAA,MAAM,EAACqB;AAHK,OAAd;AAKG;;;kCACS;AACZ,WAAK5B,WAAL,CAAiB,CAAjB;AACG;;;yCACgB;AAAE,aAAO8B,IAAI,CAACa,MAAL,EAAP;AAAuB;;;6BACnC;AACR,UAAIC,YAAY,GAAC;AAChBC,QAAAA,KAAK,EAAE;AADS,OAAjB;AAGC,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAqB,QAAA,KAAK,EAAED,YAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAA8B,KAAK1C,KAAL,CAAWK,MAAzC,CADJ,EAEI,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAE,KAAKL,KAAL,CAAWM,SAA7B;AAAwC,QAAA,UAAU,EAAE,KAAKN,KAAL,CAAWG,aAA/D;AAA8E,QAAA,QAAQ,EAAC,QAAvF;AAAgG,QAAA,cAAc,EAAC,QAA/G;AAAwH,QAAA,MAAM,MAA9H;AAA+H,QAAA,kBAAkB,EAAE,KAAKyC,kBAAxJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGF,oBAAC,YAAD;AAAc,QAAA,KAAK,EAAE,KAAK5C,KAAL,CAAWC,WAAhC;AAA6C,QAAA,MAAM,EAAE,KAAKH,WAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHE,CADF,CADF;AASD;;;;EAtHeP,S;;AAyHlB,eAAeK,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Chart from './components/Chart';\nimport InvestSlider from './components/InvestSlider';\nimport ScenarioSlider from './components/ScenarioSlider';\nconst API = 'https://sheets.googleapis.com/v4/spreadsheets/176E8o0qhfHVTjYIwuk5kAWNggYOD526d4HBqTegJ4zM/values:batchGet?'+\n'ranges=Investment!C3:C7&ranges=Worst!F12:V12&'+//for base investments & worst data\n'ranges=Worst!F17:V17&ranges=Worst!F22:V22&ranges=Worst!F27:V27&ranges=Worst!F32:V32&'+\n'ranges=Mid!F12:V12&ranges=Mid!F17:V17&ranges=Mid!F22:V22&ranges=Mid!F27:V27&ranges=Mid!F32:V32&'+\n'ranges=Best!F12:V12&ranges=Best!F17:V17&ranges=Best!F22:V22&ranges=Best!F27:V27&ranges=Best!F32:V32&'+\n'valueRenderOption=UNFORMATTED_VALUE&majorDimension=ROWS&key=AIzaSyBhw79t2J0aRVOT2a0P0-Jh81TvwhK0VMI';\nclass App extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.updateRange= this.updateRange.bind(this);\n\t\tthis.state = {\n\t\t\tsliderValue:1,\n\t\t\tScenarioValue:1,\n\t\t\tbaseInvestmet:{data:[0,0,0,0,0]},\n\t\t\tmaxVal:1,\n\t\t\tchartData:{\n\t\t\t\tlabels: ['','1 year','2 year','3 year','4 year','5 year'],\n\t\t\t\tdatasets:[{\n\t\t\t\tlabel:'ROI',\n\t\t\t\tdata:[],\n\t\t\t\tbackgroundColor:[\n\t\t\t\t  '#447D00'\n\t\t\t\t]\n\t\t\t\t},{\n\t\t\t\tlabel:'ROI',\n\t\t\t\tdata:{},\n\t\t\t\tbackgroundColor:[\n\t\t\t\t  '#440000'\n\t\t\t\t]\n\t\t\t\t},{\n\t\t\t\tlabel:'ROI',\n\t\t\t\tdata:[],\n\t\t\t\tbackgroundColor:[\n\t\t\t\t  '#447DB9'\n\t\t\t\t]\n\t\t\t\t}]\n\t\t\t},\n\t\t\t WorstSets:[[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0]],\n\t\t\t MidSets:[[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0]],\n\t\t\t BestSets:[[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0]],\n\t\t}\n\t}\n\tsetDatsets(){\n     fetch(API).then(response => response.json()).then(data => {\n\t  const worstData=this.state.WorstSets;\n\t  const midData=this.state.MidSets;\n\t  const bestData=this.state.BestSets;\n\t  for(let i=0;i<3;i++){\n\t\t  for(let j=0;j<5;j++){\n\t\t\t  var temp=data.valueRanges[(i*5)+(j+1)].values[0];\n\t\t\t  switch (i){\n\t\t\t\t  case 0:\n\t\t\t\t\tworstData[j][1]=temp[0];\n\t\t\t\t\tworstData[j][2]=temp[4];\n\t\t\t\t\tworstData[j][3]=temp[8];\n\t\t\t\t\tworstData[j][4]=temp[12];\n\t\t\t\t\tworstData[j][5]=temp[16];\n\t\t\t\t  break;\n\t\t\t\t  case 1:\n\t\t\t\t\tmidData[j][1]=temp[0];\n\t\t\t\t\tmidData[j][2]=temp[4];\n\t\t\t\t\tmidData[j][3]=temp[8];\n\t\t\t\t\tmidData[j][4]=temp[12];\n\t\t\t\t\tmidData[j][5]=temp[16];\n\t\t\t\t  break;\n\t\t\t\t  case 2:\n\t\t\t\t\tbestData[j][1]=temp[0];\n\t\t\t\t\tbestData[j][2]=temp[4];\n\t\t\t\t\tbestData[j][3]=temp[8];\n\t\t\t\t\tbestData[j][4]=temp[12];\n\t\t\t\t\tbestData[j][5]=temp[16];\n\t\t\t\t  break;\n\t\t\t  }\n\t\t  }\n\t  }\n\t  let tempMax=(parseFloat(Math.round(bestData[0][5] * 100) / 100).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\t  \n\t\tconst tempBase=this.state.baseInvestmet;\n\t\tfor(let i=0;i<data.valueRanges[0].values.length;i++){\n\t\t\ttempBase.data[i]=parseFloat(Math.round(data.valueRanges[0].values[i]*100)/100).toFixed(2);\n\t\t}\n\t\tthis.setState({ \n\t\t\tbaseInvestmet:tempBase,\n\t\t\tWorstSets:worstData,\n\t\t\tMidSets:midData,\n\t\t\tBestSets:bestData,\n\t\t\tmaxVal:tempMax});\n\t\t});\n\t\tthis.setBaseData();\t\t\n\t}\n\tcomponentDidMount(){\n\t\tthis.setDatsets();\n\t}\n\tupdateRange(val) {\n\t\tconst chartData = this.state.chartData;\n\t\tconsole.log('update range',this.state.baseInvestmet.data[val-1]);\n\t\tchartData.datasets[0].data=this.state.WorstSets[val-1];\n\t\tchartData.datasets[0].label=parseFloat(Math.round(this.state.baseInvestmet.data[val-1]*100)/100).toFixed(2);\n\t\tchartData.datasets[1].data=this.state.MidSets[val-1];\n\t\tchartData.datasets[2].data=this.state.BestSets[val-1];\n\t  let tempMax=(parseFloat(Math.round(chartData.datasets[2].data[5] * 100) / 100).toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\t\tthis.setState({\n\t\t  sliderValue: val,\n\t\t  chartData: chartData,\n\t\t  maxVal:tempMax\n\t\t});\n    }\n\tsetBaseData(){\n\t\tthis.updateRange(1);\n    }\n\tdatasetKeyProvider(){ return Math.random(); }\n  render() {\n\t  var stylePadding={\n\t\t  width: 600\n\t  }\n    return (\n      <div className=\"App\" style={stylePadding}>\n        <div className=\"\">\n            <h2 >Total portfolio value: ${this.state.maxVal}</h2>\n            <Chart chartData={this.state.chartData} sidebarVal={this.state.baseInvestmet} location=\"1 year\" legendPosition=\"bottom\" redraw datasetKeyProvider={this.datasetKeyProvider}/>\n\t\t    <InvestSlider range={this.state.sliderValue} handle={this.updateRange}/>\n\t\t</div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}