{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\shilan\\\\Desktop\\\\chartTest\\\\reactcharts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\shilan\\\\Desktop\\\\chartTest\\\\reactcharts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\shilan\\\\Desktop\\\\chartTest\\\\reactcharts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\shilan\\\\Desktop\\\\chartTest\\\\reactcharts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\shilan\\\\Desktop\\\\chartTest\\\\reactcharts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\shilan\\\\Desktop\\\\chartTest\\\\reactcharts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\shilan\\\\Desktop\\\\chartTest\\\\reactcharts\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Chart from './components/Chart';\nimport VolumeSlider from './components/RangeSlider';\nimport CSVReader from 'react-csv-reader';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.updateRange = _this.updateRange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleForce = _this.handleForce.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      sliderValue: 5,\n      chartData: {}\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.getChartData();\n    }\n  }, {\n    key: \"updateRange\",\n    value: function updateRange(val) {\n      var chartData = this.state.chartData;\n      var datadd = chartData && chartData.datasets ? chartData.datasets[0].data : null;\n      console.log(datadd[0]);\n      chartData.datasets = [{\n        label: 'Population',\n        data: [val * chartData.datasets.data[0], val * 2, val * 3, val * 3, val * 4, val * 5],\n        backgroundColor: ['red']\n      }];\n      this.setState({\n        sliderValue: val,\n        chartData: chartData\n      });\n    }\n  }, {\n    key: \"getChartData\",\n    value: function getChartData() {\n      // Ajax calls here\n      this.setState({\n        chartData: {}\n      });\n    }\n  }, {\n    key: \"handleForce\",\n    value: function handleForce(arr, name) {\n      var chartData = this.state.chartData;\n      chartData.labels = arr[0];\n      chartData.datasets = [{\n        label: 'population',\n        data: arr[1],\n        backgroundColor: ['red']\n      }];\n      this.setState({\n        chartData: chartData\n      });\n      console.log(this.state.sliderValue);\n      console.log(arr[0]);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var stylePadding = {\n        width: 600\n      };\n      return React.createElement(\"div\", {\n        className: \"App\",\n        style: stylePadding,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Welcome to React\"), React.createElement(Chart, {\n        chartData: this.state.chartData,\n        location: \"Massachusetts\",\n        legendPosition: \"bottom\",\n        redraw: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(VolumeSlider, {\n        range: this.state.sliderValue,\n        action: this.updateRange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(CSVReader, {\n        cssClass: \"csv-input\",\n        label: \"Select CSV with secret Death Star statistics\",\n        onFileLoaded: this.handleForce,\n        onError: this.handleDarkSideForce,\n        inputId: \"ObiWan\",\n        inputStyle: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\shilan\\Desktop\\chartTest\\reactcharts\\src\\App.js"],"names":["React","Component","Chart","VolumeSlider","CSVReader","App","props","updateRange","bind","handleForce","state","sliderValue","chartData","getChartData","val","datadd","datasets","data","console","log","label","backgroundColor","setState","arr","name","labels","stylePadding","width","handleDarkSideForce","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Chart from './components/Chart';\nimport VolumeSlider from './components/RangeSlider';\nimport CSVReader from 'react-csv-reader';\n\nclass App extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.updateRange= this.updateRange.bind(this);\n\t\tthis.handleForce= this.handleForce.bind(this);\n\t\tthis.state = {\n\t\t\tsliderValue:5,\n\t\t\tchartData:{}\n\t\t}\n\t}\n\t\tcomponentWillMount(){\n    this.getChartData();\n}\n\tupdateRange(val) {\n\t\tconst chartData = this.state.chartData;\n\t\tconst datadd=chartData && chartData.datasets ? chartData.datasets[0].data:null;\n\t\tconsole.log(datadd[0]);\n\t\tchartData.datasets = [\n\t\t\t  {\n\t\t\t\tlabel:'Population',\n\t\t\t\tdata:[\n\t\t\t\t  val*chartData.datasets.data[0],\n\t\t\t\t  (val)*2,\n\t\t\t\t  (val)*3,\n\t\t\t\t  (val)*3,\n\t\t\t\t  (val)*4,\n\t\t\t\t  (val)*5\n\t\t\t\t],\n\t\t\t\tbackgroundColor:[\n\t\t\t\t  'red'\n\t\t\t\t]\n\t\t\t  }\n\t\t\t]\n\t\tthis.setState({\n\t\t  sliderValue: val,\n\t\t  chartData: chartData\n\t\t});\n    }\n\n\tgetChartData(){\n    // Ajax calls here\n\t\tthis.setState({\n\t\t  chartData:{\n\t\t\t\t\t  }\n\t\t});\n\t}\n\thandleForce(arr,name){\n\t\tconst chartData = this.state.chartData;\n\t\tchartData.labels = arr[0];\n\t\tchartData.datasets = [{\n\t\t\t\tlabel:'population',\n\t\t\t\tdata:arr[1],\n\t\t\t\tbackgroundColor:[\n\t\t\t\t  'red'\n\t\t\t\t]\n\t\t\t}];\n\t\tthis.setState({\n\t\t  chartData: chartData\n\t\t});\n\t\tconsole.log(this.state.sliderValue);\n\t\tconsole.log(arr[0]);\t\n\t}\n  render() {\n\t  \n\t  var stylePadding={\n\t\t  width: 600\n\t  }\n    return (\n      <div className=\"App\" style={stylePadding}>\n        <div className=\"\">\n            <h2>Welcome to React</h2>\n            <Chart chartData={this.state.chartData} location=\"Massachusetts\" legendPosition=\"bottom\" redraw/>\n\t\t    <VolumeSlider range={this.state.sliderValue} action={this.updateRange}/>\n\t\t\t<CSVReader\n\t\t\t\tcssClass=\"csv-input\"\n\t\t\t\tlabel=\"Select CSV with secret Death Star statistics\"\n\t\t\t\tonFileLoaded={this.handleForce}\n\t\t\t\tonError={this.handleDarkSideForce}\n\t\t\t\tinputId=\"ObiWan\"\n\t\t\t\tinputStyle={{color: 'red'}}\n\t\t\t/>\n\t\t</div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}