{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\shilan\\\\Desktop\\\\chartTest\\\\reactcharts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\shilan\\\\Desktop\\\\chartTest\\\\reactcharts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\shilan\\\\Desktop\\\\chartTest\\\\reactcharts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\shilan\\\\Desktop\\\\chartTest\\\\reactcharts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\shilan\\\\Desktop\\\\chartTest\\\\reactcharts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\shilan\\\\Desktop\\\\chartTest\\\\reactcharts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\shilan\\\\Desktop\\\\chartTest\\\\reactcharts\\\\src\\\\MApp.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Chart from './components/Chart';\nimport InvestSlider from './components/InvestSlider';\nimport ScenarioSlider from './components/ScenarioSlider';\nvar API = 'https://sheets.googleapis.com/v4/spreadsheets/1JbLq-KRysRSD6Xptw24p3I79takWfFwCTSY7nYbakPI/values:batchGet?' + 'ranges=Investment!B3:B7&ranges=Worst!F12:V12&' + //for base investments & worst data\n'ranges=Worst!F17:V17&ranges=Worst!F22:V22&ranges=Worst!F27:V27&ranges=Worst!F32:V32&' + 'ranges=Mid!F12:V12&ranges=Mid!F17:V17&ranges=Mid!F22:V22&ranges=Mid!F27:V27&ranges=Mid!F32:V32&' + 'ranges=Best!F12:V12&ranges=Best!F17:V17&ranges=Best!F22:V22&ranges=Best!F27:V27&ranges=Best!F32:V32&' + 'valueRenderOption=UNFORMATTED_VALUE&majorDimension=ROWS&key=AIzaSyBhw79t2J0aRVOT2a0P0-Jh81TvwhK0VMI';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.updateRange = _this.updateRange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateScenario = _this.updateScenario.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      sliderValue: 1,\n      chartData: {\n        labels: ['', '1 year', '2 year', '3 year', '4 year', '5 year'],\n        datasets: [{\n          label: 'Population1',\n          data: [],\n          backgroundColor: ['#447DB9']\n        }]\n      },\n      ScenarioValue: 1,\n      baseInvestments: [0, 0, 0, 0, 0],\n      WorstSets: [[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]],\n      MidSets: [[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]],\n      BestSets: [[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]]\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"setDatsets\",\n    value: function setDatsets() {\n      var _this2 = this;\n\n      fetch(API).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        var worstData = _this2.state.WorstSets;\n        var midData = _this2.state.MidSets;\n        var bestData = _this2.state.BestSets;\n        var baseInvestments = data.valueRanges[0].values;\n\n        for (var i = 0; i < 3; i++) {\n          for (var j = 0; j < 5; j++) {\n            var temp = data.valueRanges[i * 5 + (j + 1)].values[0];\n            var al = [];\n            var e1 = {};\n            e1 = temp[0];\n            al.push(0);\n            al.push(e1);\n            e1 = temp[4];\n            al.push(e1);\n            e1 = temp[8];\n            al.push(e1);\n            e1 = temp[12];\n            al.push(e1);\n            e1 = temp[16];\n            al.push(e1);\n\n            switch (i) {\n              case 0:\n                worstData[j][1] = temp[0] * .001;\n                worstData[j][2] = temp[4] * .001;\n                worstData[j][3] = temp[8] * .001;\n                worstData[j][4] = temp[12] * .001;\n                worstData[j][5] = temp[16] * .001;\n                break;\n\n              case 1:\n                midData[j][1] = temp[0] * .001;\n                midData[j][2] = temp[4] * .001;\n                midData[j][3] = temp[8] * .001;\n                midData[j][4] = temp[12] * .001;\n                midData[j][5] = temp[16] * .001;\n                break;\n\n              case 2:\n                bestData[j][1] = temp[0] * .001;\n                bestData[j][2] = temp[4] * .001;\n                bestData[j][3] = temp[8] * .001;\n                bestData[j][4] = temp[12] * .001;\n                bestData[j][5] = temp[16] * .001;\n                break;\n            }\n          }\n        }\n\n        var rows = [];\n        var base = _this2.state.baseInvestments;\n\n        for (var _i = 0; _i < baseInvestments.length; _i++) {\n          console.log(baseInvestments[0]);\n          base[_i] = baseInvestments[_i];\n        }\n\n        _this2.setState({\n          baseInvestments: baseInvestments,\n          WorstSets: worstData,\n          MidSets: midData,\n          BestSets: bestData\n        });\n      });\n      this.setBaseData();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setDatsets();\n    }\n  }, {\n    key: \"updateScenario\",\n    value: function updateScenario(val) {\n      this.setState({\n        ScenarioValue: val\n      });\n      this.updateRange(this.state.sliderValue);\n    }\n  }, {\n    key: \"updateRange\",\n    value: function updateRange(val) {\n      var chartData = this.state.chartData;\n      var sv = this.state.ScenarioValue;\n      var workset = this.state.WorstSets;\n\n      switch (sv) {\n        case 1:\n          console.log(workset[0]);\n          chartData.datasets = [{\n            label: 'Population1',\n            data: workset[val - 1],\n            backgroundColor: ['#447DB9']\n          }];\n          break;\n\n        case 2:\n          chartData.datasets = [{\n            label: 'Population1',\n            data: this.state.MidSets[val - 1],\n            backgroundColor: ['#447DB9']\n          }];\n          break;\n\n        case 3:\n          chartData.datasets = [{\n            label: 'Population1',\n            data: this.state.BestSets[val - 1],\n            backgroundColor: ['#447DB9']\n          }];\n          break;\n\n        default:\n          break;\n      } //console.log(chartData);\n\n\n      this.setState({\n        sliderValue: val,\n        chartData: chartData\n      });\n    }\n  }, {\n    key: \"setBaseData\",\n    value: function setBaseData() {\n      this.updateRange(1);\n    }\n  }, {\n    key: \"datasetKeyProvider\",\n    value: function datasetKeyProvider() {\n      return Math.random();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var stylePadding = {\n        width: 600\n      };\n      return React.createElement(\"div\", {\n        className: \"App\",\n        style: stylePadding,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"INVO token investment calculator\"), React.createElement(Chart, {\n        chartData: this.state.chartData,\n        location: \"1 year\",\n        legendPosition: \"bottom\",\n        redraw: true,\n        datasetKeyProvider: this.datasetKeyProvider,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }), React.createElement(InvestSlider, {\n        range: this.state.sliderValue,\n        handle: this.updateRange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }), React.createElement(ScenarioSlider, {\n        range: this.state.ScenarioValue,\n        handle: this.updateScenario,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\shilan\\Desktop\\chartTest\\reactcharts\\src\\MApp.js"],"names":["React","Component","Chart","InvestSlider","ScenarioSlider","API","App","props","updateRange","bind","updateScenario","state","sliderValue","chartData","labels","datasets","label","data","backgroundColor","ScenarioValue","baseInvestments","WorstSets","MidSets","BestSets","fetch","then","response","json","worstData","midData","bestData","valueRanges","values","i","j","temp","al","e1","push","rows","base","length","console","log","setState","setBaseData","setDatsets","val","sv","workset","Math","random","stylePadding","width","datasetKeyProvider"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Chart from './components/Chart';\nimport InvestSlider from './components/InvestSlider';\nimport ScenarioSlider from './components/ScenarioSlider';\nconst API = 'https://sheets.googleapis.com/v4/spreadsheets/1JbLq-KRysRSD6Xptw24p3I79takWfFwCTSY7nYbakPI/values:batchGet?'+\n'ranges=Investment!B3:B7&ranges=Worst!F12:V12&'+//for base investments & worst data\n'ranges=Worst!F17:V17&ranges=Worst!F22:V22&ranges=Worst!F27:V27&ranges=Worst!F32:V32&'+\n'ranges=Mid!F12:V12&ranges=Mid!F17:V17&ranges=Mid!F22:V22&ranges=Mid!F27:V27&ranges=Mid!F32:V32&'+\n'ranges=Best!F12:V12&ranges=Best!F17:V17&ranges=Best!F22:V22&ranges=Best!F27:V27&ranges=Best!F32:V32&'+\n'valueRenderOption=UNFORMATTED_VALUE&majorDimension=ROWS&key=AIzaSyBhw79t2J0aRVOT2a0P0-Jh81TvwhK0VMI';\n\nclass App extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.updateRange= this.updateRange.bind(this);\n\t\tthis.updateScenario=this.updateScenario.bind(this);\n\t\tthis.state = {\n\t\t\tsliderValue:1,\n\t\t\tchartData:{\n\t\t\t\tlabels: ['','1 year','2 year','3 year','4 year','5 year'],\n\t\t\t\tdatasets:[{\n\t\t\t\tlabel:'Population1',\n\t\t\t\tdata:[],\n\t\t\t\tbackgroundColor:[\n\t\t\t\t  '#447DB9'\n\t\t\t\t]\n\t\t\t\t}]\n\t\t\t},\n\t\t\tScenarioValue:1,\n\t\t\t baseInvestments:[0,0,0,0,0],\n\t\t\t WorstSets:[[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0]],\n\t\t\t MidSets:[[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0]],\n\t\t\t BestSets:[[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0]],\n\t\t}\n\t}\n\tsetDatsets(){\n     fetch(API).then(response => response.json()).then(data => {\n\t  const worstData=this.state.WorstSets;\n\t  const midData=this.state.MidSets;\n\t  const bestData=this.state.BestSets;\n      let baseInvestments = data.valueRanges[0].values;\n\t  for(let i=0;i<3;i++){\n\t\t  for(let j=0;j<5;j++){\n\t\t\t  var temp=data.valueRanges[(i*5)+(j+1)].values[0];\n\t\t\t  const al=[];\n\t\t\t\tlet e1 = {};\n\t\t\t\te1=temp[0];\n\t\t\t\tal.push(0);\n\t\t\t  al.push(e1);\n\t\t\t  e1=temp[4];\n\t\t\t  al.push(e1);\n\t\t\t  e1=temp[8];\n\t\t\t  al.push(e1);\n\t\t\t  e1=temp[12];\n\t\t\t  al.push(e1);\n\t\t\t  e1=temp[16];\n\t\t\t  al.push(e1);\n\t\t\t  switch (i){\n\t\t\t\t  case 0:\n\t\t\t\t\tworstData[j][1]=temp[0]*.001;\n\t\t\t\t\tworstData[j][2]=temp[4]*.001;\n\t\t\t\t\tworstData[j][3]=temp[8]*.001;\n\t\t\t\t\tworstData[j][4]=temp[12]*.001;\n\t\t\t\t\tworstData[j][5]=temp[16]*.001;\n\t\t\t\t  break;\n\t\t\t\t  case 1:\n\t\t\t\t\tmidData[j][1]=temp[0]*.001;\n\t\t\t\t\tmidData[j][2]=temp[4]*.001;\n\t\t\t\t\tmidData[j][3]=temp[8]*.001;\n\t\t\t\t\tmidData[j][4]=temp[12]*.001;\n\t\t\t\t\tmidData[j][5]=temp[16]*.001;\n\t\t\t\t  break;\n\t\t\t\t  case 2:\n\t\t\t\t\tbestData[j][1]=temp[0]*.001;\n\t\t\t\t\tbestData[j][2]=temp[4]*.001;\n\t\t\t\t\tbestData[j][3]=temp[8]*.001;\n\t\t\t\t\tbestData[j][4]=temp[12]*.001;\n\t\t\t\t\tbestData[j][5]=temp[16]*.001;\n\t\t\t\t  break;\n\t\t\t  }\n\t\t  }\n\t  }\n\t  \n      const rows = [];\n\t  const base=this.state.baseInvestments;\n      for (let i = 0; i < baseInvestments.length; i++) {\n\t\tconsole.log(baseInvestments[0]);\t\t  \n        base[i]=baseInvestments[i];\n      }\n\t\tthis.setState({ baseInvestments: baseInvestments ,\n\t\t\tWorstSets:worstData,\n\t\t\tMidSets:midData,\n\t\t\tBestSets:bestData});\n\t\t});\n\t\tthis.setBaseData();\n\t}\n\tcomponentDidMount(){\n\t\tthis.setDatsets();\n\t}\n\tupdateScenario(val){\n\t\t\n\t\tthis.setState({\n\t\t  ScenarioValue: val\n\t\t});\n\t\tthis.updateRange(this.state.sliderValue);\n\t}\n\tupdateRange(val) {\n\t\tconst chartData = this.state.chartData;\n\t\tconst sv=this.state.ScenarioValue;\n\t\tconst workset=this.state.WorstSets;\n\t\tswitch(sv){\n\t\t\tcase 1:\n\t\t\t\tconsole.log(workset[0]);\n\t\t\t\tchartData.datasets=[{\n\t\t\t\t\tlabel:'Population1',\n\t\t\t\t\tdata:workset[val-1],\n\t\t\t\t\tbackgroundColor:[\n\t\t\t\t\t  '#447DB9'\n\t\t\t\t\t]}];\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tchartData.datasets=[{\n\t\t\t\t\tlabel:'Population1',\n\t\t\t\t\tdata:this.state.MidSets[val-1],\n\t\t\t\t\tbackgroundColor:[\n\t\t\t\t\t  '#447DB9'\n\t\t\t\t\t]}];\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tchartData.datasets=[{\n\t\t\t\t\tlabel:'Population1',\n\t\t\t\t\tdata:this.state.BestSets[val-1],\n\t\t\t\t\tbackgroundColor:[\n\t\t\t\t\t  '#447DB9'\n\t\t\t\t\t]}];\n\t\t\t\tbreak;\n\t\t\tdefault:break;\n\t\t}\n\t\t//console.log(chartData);\n\t\t\t\tthis.setState({\n\t\t\t\t  sliderValue: val,\n\t\t\t\t  chartData: chartData\n\t\t\t\t});\n    }\n\tsetBaseData(){\n\t\tthis.updateRange(1);\n    }\n\tdatasetKeyProvider(){ return Math.random(); }\n  render() {\n\t  var stylePadding={\n\t\t  width: 600\n\t  }\n    return (\n      <div className=\"App\" style={stylePadding}>\n        <div className=\"\">\n            <h2>INVO token investment calculator</h2>\n            <Chart chartData={this.state.chartData} location=\"1 year\" legendPosition=\"bottom\" redraw datasetKeyProvider={this.datasetKeyProvider}/>\n\t\t    <InvestSlider range={this.state.sliderValue} handle={this.updateRange}/>\n\t\t\t<ScenarioSlider range={this.state.ScenarioValue} handle={this.updateScenario}/>\n\t\t</div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}