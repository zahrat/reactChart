{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\shilan\\\\Desktop\\\\chartTest\\\\reactcharts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\shilan\\\\Desktop\\\\chartTest\\\\reactcharts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\shilan\\\\Desktop\\\\chartTest\\\\reactcharts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\shilan\\\\Desktop\\\\chartTest\\\\reactcharts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\shilan\\\\Desktop\\\\chartTest\\\\reactcharts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\shilan\\\\Desktop\\\\chartTest\\\\reactcharts\\\\src\\\\components\\\\Chart.js\";\nimport React, { Component } from 'react';\nimport { Line } from 'react-chartjs-2';\n\nvar Chart =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Chart, _Component);\n\n  function Chart(props) {\n    var _this;\n\n    _classCallCheck(this, Chart);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Chart).call(this, props));\n    _this.state = {\n      chartData: props.chartData,\n      sidebarVal: props.sidebarVal\n    };\n    console.log(_this.state.sidebarVal);\n    return _this;\n  }\n\n  _createClass(Chart, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(Line, {\n        datasetKeyProvider: this.props.datasetKeyProvider,\n        data: this.state.chartData,\n        options: {\n          title: {\n            s: this.props.displayTitle,\n            text: 'Largest Cities In Massachusetts',\n            fontSize: 25\n          },\n          legend: {\n            display: this.props.displayLegend,\n            position: this.props.legendPosition\n          },\n          scales: {\n            yAxes: [{\n              display: true,\n              ticks: {\n                // Include a dollar sign in the ticks\n                callback: function callback(value, index, values) {\n                  if (value < 1000000) return '$' + value * .001 + 'k';else return '$' + value * .000001 + 'M';\n                }\n              }\n            }],\n            xAxes: [{\n              gridLines: {\n                display: false\n              }\n            }]\n          },\n          tooltips: {\n            callbacks: {\n              label: function label(tooltipItem, data) {\n                //const temp=this.state.sidebarVal;\n                console.log('here', data);\n                return tooltipItem.yLabel / data;\n              }\n            }\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Chart;\n}(Component);\n\nChart.defaultProps = {\n  displayTitle: true,\n  displayLegend: true,\n  legendPosition: 'right',\n  location: 'City'\n};\nexport default Chart;","map":{"version":3,"sources":["C:\\Users\\shilan\\Desktop\\chartTest\\reactcharts\\src\\components\\Chart.js"],"names":["React","Component","Line","Chart","props","state","chartData","sidebarVal","console","log","datasetKeyProvider","title","s","displayTitle","text","fontSize","legend","display","displayLegend","position","legendPosition","scales","yAxes","ticks","callback","value","index","values","xAxes","gridLines","tooltips","callbacks","label","tooltipItem","data","yLabel","defaultProps","location"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,IAAR,QAAmB,iBAAnB;;IACMC,K;;;;;AACL,iBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACjB,+EAAMA,KAAN;AACA,UAAKC,KAAL,GAAW;AACVC,MAAAA,SAAS,EAACF,KAAK,CAACE,SADN;AAEVC,MAAAA,UAAU,EAACH,KAAK,CAACG;AAFP,KAAX;AAIAC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAKJ,KAAL,CAAWE,UAAvB;AANiB;AAOjB;;;;6BAOQ;AACT,aACA;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,IAAD;AACA,QAAA,kBAAkB,EAAE,KAAKH,KAAL,CAAWM,kBAD/B;AAEG,QAAA,IAAI,EAAE,KAAKL,KAAL,CAAWC,SAFpB;AAGG,QAAA,OAAO,EAAE;AACRK,UAAAA,KAAK,EAAC;AACJC,YAAAA,CAAC,EAAC,KAAKR,KAAL,CAAWS,YADT;AAEJC,YAAAA,IAAI,EAAC,iCAFD;AAGJC,YAAAA,QAAQ,EAAC;AAHL,WADE;AAMRC,UAAAA,MAAM,EAAC;AACLC,YAAAA,OAAO,EAAC,KAAKb,KAAL,CAAWc,aADd;AAELC,YAAAA,QAAQ,EAAC,KAAKf,KAAL,CAAWgB;AAFf,WANC;AASNC,UAAAA,MAAM,EAAE;AACTC,YAAAA,KAAK,EAAG,CAAC;AACRL,cAAAA,OAAO,EAAE,IADD;AAERM,cAAAA,KAAK,EAAE;AACN;AACAC,gBAAAA,QAAQ,EAAE,kBAASC,KAAT,EAAgBC,KAAhB,EAAuBC,MAAvB,EAA+B;AACxC,sBAAGF,KAAK,GAAC,OAAT,EACA,OAAO,MAAOA,KAAK,GAAC,IAAb,GAAmB,GAA1B,CADA,KAEK,OAAO,MAAKA,KAAK,GAAC,OAAX,GAAoB,GAA3B;AACL;AANK;AAFC,aAAD,CADC;AAYTG,YAAAA,KAAK,EAAC,CAAC;AACLC,cAAAA,SAAS,EAAE;AACZZ,gBAAAA,OAAO,EAAE;AADG;AADN,aAAD;AAZG,WATF;AA0BNa,UAAAA,QAAQ,EAAE;AACXC,YAAAA,SAAS,EAAE;AACXC,cAAAA,KAAK,EAAE,eAASC,WAAT,EAAqBC,IAArB,EAA2B;AACjC;AACA1B,gBAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmByB,IAAnB;AACA,uBAAOD,WAAW,CAACE,MAAZ,GAAmBD,IAA1B;AACA;AALU;AADA;AA1BJ,SAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CADA;AA2CE;;;;EA3DiBjC,S;;AAAdE,K,CASEiC,Y,GAAe;AACnBvB,EAAAA,YAAY,EAAC,IADM;AAEnBK,EAAAA,aAAa,EAAE,IAFI;AAGnBE,EAAAA,cAAc,EAAC,OAHI;AAInBiB,EAAAA,QAAQ,EAAC;AAJU,C;AAoDvB,eAAelC,KAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport {Line} from 'react-chartjs-2';\r\nclass Chart extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state={\r\n\t\t\tchartData:props.chartData,\r\n\t\t\tsidebarVal:props.sidebarVal\r\n\t\t}\r\n\t\tconsole.log(this.state.sidebarVal);\r\n\t}\r\n\tstatic defaultProps = {\r\n    displayTitle:true,\r\n    displayLegend: true,\r\n    legendPosition:'right',\r\n    location:'City'\r\n}\r\n\trender (){ \r\n\treturn(\r\n\t<div className=\"chart\">\r\n\t\t<Line\r\n\t\tdatasetKeyProvider={this.props.datasetKeyProvider}\r\n\t\t\t\t\tdata={this.state.chartData}\r\n\t\t\t\t\toptions={{\r\n\t\t\t\t\t\ttitle:{\r\n\t\t\t\t\t\t  s:this.props.displayTitle,\r\n\t\t\t\t\t\t  text:'Largest Cities In Massachusetts',\r\n\t\t\t\t\t\t  fontSize:25\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tlegend:{\r\n\t\t\t\t\t\t  display:this.props.displayLegend,\r\n\t\t\t\t\t\t  position:this.props.legendPosition\r\n\t\t\t\t\t\t},scales: {\r\n\t\t\t\t\t\t\tyAxes : [{\r\n\t\t\t\t\t\t\t\tdisplay: true,\r\n\t\t\t\t\t\t\t\tticks: {\r\n\t\t\t\t\t\t\t\t\t// Include a dollar sign in the ticks\r\n\t\t\t\t\t\t\t\t\tcallback: function(value, index, values) {\r\n\t\t\t\t\t\t\t\t\t\tif(value<1000000)\r\n\t\t\t\t\t\t\t\t\t\treturn '$' + (value*.001)+'k';\r\n\t\t\t\t\t\t\t\t\t\telse return '$'+(value*.000001)+'M';\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}],\r\n\t\t\t\t\t\t\txAxes:[{\r\n\t\t\t\t\t\t\t  gridLines: {\r\n\t\t\t\t\t\t\t\tdisplay: false,\r\n\t\t\t\t\t\t\t  }\r\n\t\t\t\t\t\t\t}]\r\n\t\t\t\t\t\t},tooltips: {\r\n\t\t\t\t\t\t\tcallbacks: {\r\n\t\t\t\t\t\t\tlabel: function(tooltipItem,data) {\r\n\t\t\t\t\t\t\t\t//const temp=this.state.sidebarVal;\r\n\t\t\t\t\t\t\t\tconsole.log('here',data);\r\n\t\t\t\t\t\t\t\treturn tooltipItem.yLabel/data;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t  }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t</div>\r\n\t)}\r\n}\r\nexport default Chart;"]},"metadata":{},"sourceType":"module"}