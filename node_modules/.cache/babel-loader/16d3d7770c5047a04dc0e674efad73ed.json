{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\shilan\\\\Desktop\\\\chartTest\\\\reactcharts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\shilan\\\\Desktop\\\\chartTest\\\\reactcharts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\shilan\\\\Desktop\\\\chartTest\\\\reactcharts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\shilan\\\\Desktop\\\\chartTest\\\\reactcharts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\shilan\\\\Desktop\\\\chartTest\\\\reactcharts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\shilan\\\\Desktop\\\\chartTest\\\\reactcharts\\\\src\\\\App (8).js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nvar API = 'https://sheets.googleapis.com/v4/spreadsheets/1JbLq-KRysRSD6Xptw24p3I79takWfFwCTSY7nYbakPI/values:batchGet?' + 'ranges=Investment!B3:B7&ranges=Worst!F12:V12&' + //for base investments & worst data\n'ranges=Worst!F17:V17&ranges=Worst!F22:V22&ranges=Worst!F27:V27&ranges=Worst!F32:V32&' + 'ranges=Mid!F12:V12&ranges=Mid!F17:V17&ranges=Mid!F22:V22&ranges=Mid!F27:V27&ranges=Mid!F32:V32&' + 'ranges=Best!F12:V12&ranges=Best!F17:V17&ranges=Best!F22:V22&ranges=Best!F27:V27&ranges=Best!F32:V32&' + 'valueRenderOption=FORMATTED_VALUE&majorDimension=ROWS&key=AIzaSyBhw79t2J0aRVOT2a0P0-Jh81TvwhK0VMI';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n    _this.state = {\n      baseInvestments: [],\n      WorstSets: [],\n      MidSets: [],\n      BestSets: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(API).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        //console.log(data);\n        var worstData = _this2.state.WorstSets;\n        var midData = _this2.state.MidSets;\n        var bestData = _this2.state.BestSets;\n        var baseInvestments = data.valueRanges[0].values;\n\n        for (var i = 0; i < 3; i++) {\n          for (var j = 0; j < 5; j++) {\n            var temp = data.valueRanges[i * 5 + (j + 1)].value[0];\n            var a1 = [temp[0], temp[4], temp[8], temp[12], temp[16]];\n            console.log(al);\n\n            switch (i) {\n              case 0:\n                worstData.push(al);\n                break;\n\n              case 1:\n                midData.push(al);\n                break;\n\n              case 2:\n                bestData.push(al);\n                break;\n            }\n          }\n        }\n\n        worstRows.push.apply(worstRows, data.valueRanges[1].values[0]);\n        var rows = [];\n\n        for (var _i = 1; _i < baseInvestments.length; _i++) {\n          var rowObject = {};\n\n          for (var _j = 0; _j < baseInvestments[_i].length; _j++) {\n            rowObject[baseInvestments[0][_j]] = baseInvestments[_i][_j];\n          }\n\n          rows.push(rowObject);\n        }\n\n        _this2.setState({\n          baseInvestments: rows\n        }); //console.log(baseInvestments[0]);\n\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\shilan\\Desktop\\chartTest\\reactcharts\\src\\App (8).js"],"names":["React","Component","API","App","state","baseInvestments","WorstSets","MidSets","BestSets","fetch","then","response","json","data","worstData","midData","bestData","valueRanges","values","i","j","temp","value","a1","console","log","al","push","worstRows","apply","rows","length","rowObject","setState"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nconst API = 'https://sheets.googleapis.com/v4/spreadsheets/1JbLq-KRysRSD6Xptw24p3I79takWfFwCTSY7nYbakPI/values:batchGet?'+\n'ranges=Investment!B3:B7&ranges=Worst!F12:V12&'+//for base investments & worst data\n'ranges=Worst!F17:V17&ranges=Worst!F22:V22&ranges=Worst!F27:V27&ranges=Worst!F32:V32&'+\n'ranges=Mid!F12:V12&ranges=Mid!F17:V17&ranges=Mid!F22:V22&ranges=Mid!F27:V27&ranges=Mid!F32:V32&'+\n'ranges=Best!F12:V12&ranges=Best!F17:V17&ranges=Best!F22:V22&ranges=Best!F27:V27&ranges=Best!F32:V32&'+\n'valueRenderOption=FORMATTED_VALUE&majorDimension=ROWS&key=AIzaSyBhw79t2J0aRVOT2a0P0-Jh81TvwhK0VMI';\n\nclass App extends Component {\n\n  constructor(){\n    super();\n\n    this.state = {\n     baseInvestments:[],\n\t WorstSets:[],\n\t MidSets:[],\n\t BestSets:[],\n    };\n\n  }\n\n   \n  componentDidMount(){\n\n     fetch(API).then(response => response.json()).then(data => {\n        //console.log(data);\n\t  const worstData=this.state.WorstSets;\n\t  const midData=this.state.MidSets;\n\t  const bestData=this.state.BestSets;\n      let baseInvestments = data.valueRanges[0].values;\n\t  for(let i=0;i<3;i++){\n\t\t  for(let j=0;j<5;j++){\n\t\t\t  var temp=data.valueRanges[(i*5)+(j+1)].value[0];\n\t\t\t  var a1=[temp[0],temp[4],temp[8],temp[12],temp[16]];\n\t\t\t  console.log(al);\n\t\t\t  switch (i){\n\t\t\t\t  case 0:\n\t\t\t\t\tworstData.push(al);\n\t\t\t\t  break;\n\t\t\t\t  case 1:\n\t\t\t\t\tmidData.push(al);\n\t\t\t\t  break;\n\t\t\t\t  case 2:\n\t\t\t\t\tbestData.push(al);\n\t\t\t\t  break;\n\t\t\t  }\n\t\t  }\n\t  }\n\t  worstRows.push.apply(worstRows,data.valueRanges[1].values[0]);\n      const rows = [];\n      for (let i = 1; i < baseInvestments.length; i++) {\n        let rowObject = {};\n        for (let j = 0; j < baseInvestments[i].length; j++) {\n          rowObject[baseInvestments[0][j]] = baseInvestments[i][j];\n        }\n        rows.push(rowObject);\n      }\n\n        this.setState({ baseInvestments: rows });\n        //console.log(baseInvestments[0]);\n    });\n\n  }\n  render() {\n\n    return (\n      <div>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}