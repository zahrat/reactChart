{"ast":null,"code":"\"use strict\"; // Copyright 2014-2016, Google, Inc.\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [0, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar fs = require(\"fs\");\n\nvar google_auth_library_1 = require(\"google-auth-library\");\n\nvar pify = require(\"pify\");\n\nvar url = require(\"url\");\n\nvar util = require(\"util\");\n\nvar apirequest_1 = require(\"./apirequest\");\n\nvar endpoint_1 = require(\"./endpoint\");\n\nvar fsp = pify(fs);\n\nvar Discovery =\n/** @class */\nfunction () {\n  /**\n   * Discovery for discovering API endpoints\n   *\n   * @param options Options for discovery\n   */\n  function Discovery(options) {\n    this.transporter = new google_auth_library_1.DefaultTransporter();\n    this.options = options || {};\n  }\n  /**\n   * Generate and Endpoint from an endpoint schema object.\n   *\n   * @param schema The schema from which to generate the Endpoint.\n   * @return A function that creates an endpoint.\n   */\n\n\n  Discovery.prototype.makeEndpoint = function (schema) {\n    return function (options) {\n      var ep = new endpoint_1.Endpoint(options);\n      ep.applySchema(ep, schema, schema, ep);\n      return ep;\n    };\n  };\n  /**\n   * Log output of generator. Works just like console.log\n   */\n\n\n  Discovery.prototype.log = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    if (this.options && this.options.debug) {\n      console.log.apply(this, arguments);\n    }\n  };\n  /**\n   * Generate all APIs and return as in-memory object.\n   * @param discoveryUrl\n   */\n\n\n  Discovery.prototype.discoverAllAPIs = function (discoveryUrl) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n\n      var headers, res, items, apis, versionIndex, apisIndex, _loop_1, _i, apis_1, set;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            headers = this.options.includePrivate ? {} : {\n              'X-User-Ip': '0.0.0.0'\n            };\n            return [4\n            /*yield*/\n            , this.transporter.request({\n              url: discoveryUrl,\n              headers: headers\n            })];\n\n          case 1:\n            res = _a.sent();\n            items = res.data.items;\n            return [4\n            /*yield*/\n            , Promise.all(items.map(function (api) {\n              return __awaiter(_this, void 0, void 0, function () {\n                var endpointCreator;\n                return __generator(this, function (_a) {\n                  switch (_a.label) {\n                    case 0:\n                      return [4\n                      /*yield*/\n                      , this.discoverAPI(api.discoveryRestUrl)];\n\n                    case 1:\n                      endpointCreator = _a.sent();\n                      return [2\n                      /*return*/\n                      , {\n                        api: api,\n                        endpointCreator: endpointCreator\n                      }];\n                  }\n                });\n              });\n            }))];\n\n          case 2:\n            apis = _a.sent();\n            versionIndex = {};\n            apisIndex = {};\n\n            _loop_1 = function _loop_1(set) {\n              if (!apisIndex[set.api.name]) {\n                versionIndex[set.api.name] = {};\n\n                apisIndex[set.api.name] = function (options) {\n                  var type = typeof options;\n                  var version;\n\n                  if (type === 'string') {\n                    version = options;\n                    options = {};\n                  } else if (type === 'object') {\n                    version = options.version;\n                    delete options.version;\n                  } else {\n                    throw new Error('Argument error: Accepts only string or object');\n                  }\n\n                  try {\n                    var endpointCreator = versionIndex[set.api.name][version];\n                    var ep = set.endpointCreator(options); // tslint:disable-next-line: no-any\n\n                    ep.google = _this; // for drive.google.transporter\n\n                    return Object.freeze(ep); // create new & freeze\n                  } catch (e) {\n                    throw new Error(util.format('Unable to load endpoint %s(\"%s\"): %s', set.api.name, version, e.message));\n                  }\n                };\n              }\n\n              versionIndex[set.api.name][set.api.version] = set.endpointCreator;\n            };\n\n            for (_i = 0, apis_1 = apis; _i < apis_1.length; _i++) {\n              set = apis_1[_i];\n\n              _loop_1(set);\n            }\n\n            return [2\n            /*return*/\n            , apisIndex];\n        }\n      });\n    });\n  };\n  /**\n   * Generate API file given discovery URL\n   *\n   * @param apiDiscoveryUrl URL or filename of discovery doc for API\n   * @returns A promise that resolves with a function that creates the endpoint\n   */\n\n\n  Discovery.prototype.discoverAPI = function (apiDiscoveryUrl) {\n    return __awaiter(this, void 0, void 0, function () {\n      var parts, file, res, options, url_1, parameters, pcr, res;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!(typeof apiDiscoveryUrl === 'string')) return [3\n            /*break*/\n            , 5];\n            parts = url.parse(apiDiscoveryUrl);\n            if (!(apiDiscoveryUrl && !parts.protocol)) return [3\n            /*break*/\n            , 2];\n            this.log('Reading from file ' + apiDiscoveryUrl);\n            return [4\n            /*yield*/\n            , fsp.readFile(apiDiscoveryUrl, {\n              encoding: 'utf8'\n            })];\n\n          case 1:\n            file = _a.sent();\n            return [2\n            /*return*/\n            , this.makeEndpoint(JSON.parse(file))];\n\n          case 2:\n            this.log('Requesting ' + apiDiscoveryUrl);\n            return [4\n            /*yield*/\n            , this.transporter.request({\n              url: apiDiscoveryUrl\n            })];\n\n          case 3:\n            res = _a.sent();\n            return [2\n            /*return*/\n            , this.makeEndpoint(res.data)];\n\n          case 4:\n            return [3\n            /*break*/\n            , 7];\n\n          case 5:\n            options = apiDiscoveryUrl;\n            this.log('Requesting ' + options.url);\n            url_1 = options.url;\n            delete options.url;\n            parameters = {\n              options: {\n                url: url_1,\n                method: 'GET'\n              },\n              requiredParams: [],\n              pathParams: [],\n              params: options,\n              context: {\n                google: {\n                  _options: {}\n                },\n                _options: {}\n              }\n            };\n            pcr = pify(apirequest_1.createAPIRequest);\n            return [4\n            /*yield*/\n            , pcr(parameters)];\n\n          case 6:\n            res = _a.sent();\n            return [2\n            /*return*/\n            , this.makeEndpoint(res.data)];\n\n          case 7:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  return Discovery;\n}();\n\nexports.Discovery = Discovery;","map":null,"metadata":{},"sourceType":"script"}